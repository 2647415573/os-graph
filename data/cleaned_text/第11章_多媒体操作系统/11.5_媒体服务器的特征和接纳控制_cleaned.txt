据的优先级是静态的。因此只需要赋予重要进程较高的优先级，使之在进程整个运行期间 都能保证优先获得处理机。然而对于EDF算法，由于所依据的截止时间是动态的，截止时 间在运行期间不断变化，因此很难使最重要进程的截止时间得到保证。

11.5媒体服务器的特征和接纳控制 目前尚无专门的多媒体文件服务器，只能利用当前的通用文件服务器，再适当增加有 关处理多媒体方面的功能，其最主要的任务是保证SRT任务的实时性。我们在对新增功能 做较详细的介绍前，有必要先介绍多媒体文件和服务器的特征。

11.5.1媒体服务器的特征

1.多媒体文件的多种媒体性 如前所述，一部数字电影是由多种媒体文件组成的。其中包含了一个视频文件、若干种 语言的音频文件，以及不同国家文字的文本文件，图11-5示出了一部电影所包含的文件，而 且在播放时，这些媒体数据流之间还必须保持同步。例如，在播放一部数字电影时，图像画 面和相应的声音或滚动字幕应当同时出现，即使图像画面、声音或字幕之间出现了很小的不 同步，也会使播放失败。因此，媒体服务器需要具有保持多种媒体数据流同步的能力。 帧 12°34

6789..10 英语 音频 法语 音频 德语 音频 英语 11213|4]5]6]7]8]9.].10 字幕 法语 -123-45678910 字幕 快进 快倒 图11-5一部电影所包含的多种媒体的文件

2.拉型和推型文件服务器 在传统的服务器中，进程要访问一个文件时，应先用open系统调用将文件打开，然后 再用read系统调用把文件中的数据读出。如果把这种方式也用于多媒体文件系统中，则用 户每发出一个read系统调用命令时，服务器便送出一帧数据，如图11-6(a)所示。该方式一 方面要求用户必须以精确的时间间隔不断发出read命令，读出一顿数据；另一方面要求服务 器每个周期都能及时地提供数据。可见，该方式不仅麻烦，而且也很难满足实时性要求。通 常把传统文件服务器称为拉型服务器。因为它需要用户不断发出命令，把数据“拉”过来。 365  计算机操作系统 为了解决上述问题，在多媒体文件服务器（视频服务器）中，采用了类似于录像机中所 用的工作方式。由用户进程发出start系统调用命令，并给出文件名和有关参数，然后视频 服务器便会以所需的速度，每隔一定的时间送出一帧数据，再由用户进程及时对它进行处 理。图11-6(b)示出了这种工作方式。通常把这种服务器称为推型服务器，因为它不断将数 据“推”给用户。 视频服务器 视频服务器 客户 客户 开始 请求 块！ 块1 时 块2 请求2 间 块3 块2 块4 请求3 块5 块3 (a)拉型服务器 (b）推型服务器 图11-6拉型服务器和推型服务器

3.多媒体文件的存储空间分配方式 在传统的文件系统中，文件组织的一个重要目标是通过减少内部和外部磁盘碎片，提 高磁盘空间的利用率。为此，存储空间的分配主要采用基于盘块的离散分配方式。而在多 媒体文件系统中，文件组织的一个重要目标是能提供恒定速率的数据流和能及时地检索数 据。如果将一个多媒体文件的数据盘块分散地存放在磁盘的不同位置，将会使在传送一个 连续的数据流时，不断地进行寻道，从一个盘块转到另一个盘块，导致所传送的数据流出 现断断续续的现象。因此在视频服务器中，对多媒体文件主要采用连续分配方式。当然这 样可能会引起较多的内部和外部碎片，但可以赢得时间，即以空间换取时间。

4.人机交互性 观看节目时，还可选择自已所熟悉的语言音频和字幕，并且可以根据需要随时更换。此外， 用户还可以随时停止（或暂停）正在观看的电视，或（让电视）从一集跳至下一集，或让电影快 进或快退等，即媒体服务器需要具有人机交互的功能。 传统的电视在传输的实现上比较简单，每套节目只需要一条频（信）道，而不管有多少 人看。然而能进行人机交互的媒体服务器实现起来就困难得多，主要表现为：

（1）它需要为每一个用户准备一条信道，如果允许1000个用户同时收看节目，就需要 有1000条信道。 许多不同的节目。

（3）有的节目可能只有一个用户观看，但有些流行节目则可能有许多用户同时或接近 同时观看，为此，服务器必须能够让众多用户同时观看一个节目，即众多用户能同时进行 人机交互。

11.5.2存储器管理中的接纳控制 为了能保证SRT任务的实时性，存储器必须能及时地提供数据，而存储器能否及时提 366  供数据的关键是SRT任务运行时所需的数据是否驻留在物理内存中。因此，在存储器管理 中增加了存储器页面锁定功能。

1.存储器页面锁定功能 对于某个SRT任务来说，如果其某些页面未在物理内存，而在运行中又需要用到这些 页面上的代码或数据，则将发生缺页中断，这意味着所需之页面必须从磁盘中读取。由于 读盘所需的时间不仅较长，而且是不确定的，这无疑会给SRT任务带来极大的影响。为避 免发生缺页中断情况，一个行之有效的方法是将SRT任务运行时所需之代码和数据锁定在 物理内存中。只有这样才有可能保证SRT任务的截止时间。 由于物理内存是非常宝贵的资源，而且容量有限，将SRT任务锁定在内存中，必将减 少内存的可用空间，导致系统综合性能的降低。因此不少操作系统都规定了只充许将一部 分内存空间分配给SRT任务，通常最多控制在60%～70%内。

2.存储器代理 为了能保证每一个SRT任务的实时性，如同处理机预留CPU带宽一样，我们也引I入 了存储空间预留功能，为每一个SRT任务预留锁定的存储空间。为实现该功能，在存储器 管理中增加了两个功能实体：存储器代理和存储器控制器。 为了能为SRT任务预留其所需要的存储器空间，由存储器代理锁定一定数量的内存空 间，把它称为全局预留存储空间，它可分为两部分：①接纳存储空间，这部分已经分配给 了被接纳的SRT任务，正在使用：②可利用存储空间，即可供新的预留请求使用的存储 空间。在确定全局预留存储空间的大小时，应当十分谨慎。首先应为内核和交互式进程留 有足够的空间，否则，可能会导致内核和交互式进程在运行时发生频繁的页面交换。 SRT任务在进入系统后，必须向存储器代理声明，请求其运行时所需要的内存数量， 存储器代理将对请求进行如下的检查： 所请求的存储空间≤可用存储空间 如果条件成立便接纳它，为它预留存储空间，否则拒绝接纳。凡被接纳的SRT任务，存储 器代理将向它提供一个预留标识符ID，并将该预留ID放入预留表中。

3.存储器控制器 获得数据。在SRT任务执行时，将ID传送给存储器控制器。后者利用预留表检查该预留 ID是否合法，如果合法，便为SRT任务分配并锁定存储器。存储器控制器还把存储器的钥 匙传送给SRT任务，SRT收到后，便建立起存储段与自已的地址空间之间的映射关系。当 SRT任务执行完成后，又将向存储器管理程序发送一释放请求，其中也包含了存储器的钥 匙。存储器管理程序收到该请求后，便释放它所占有的锁定存储空间，并向存储器代理归 还该可用存储空间。

11.5.3媒体服务器的接纳控制 一 一 通常一个媒体服务器可以同时为多个用户提供服务，由于每一个多媒体数据流都有定 时要求，为了保证服务质量，媒体服务器同样也需要设置有接纳控制功能。该功能根据接 纳控制算法确定是否应该接纳某用户对指定数据流的请求。 367  计算机操作系统

1.媒体服务器的服务质量 不同的SRT任务，所要求的服务质量并不完全相同。因此，一个媒体服务器应当能够 提供几种服务质量，以满足不同用户的需要。通常，可以提供如下三种服务质量保证：

（1）确定型的保证。这是最高的服务质量保证，它能完全保证SRT任务的所有截止时 间。为实现这样的保证，在接纳控制的算法中必须假定系统与实现实时性有关所有部分都 是处于最坏的情况，如磁盘的寻道时间最长、磁盘旋转延迟时间最长等。

（2）统计型的保证。它能以较高概率保证SRT任务的所有截止时间。为了实现这样的 保证，在接纳控制的算法中将假定系统与实现实时性有关所有部分都处于一般情况。

（3）尽力而为型保证。没有为SRT任务的截止时间提供任何保证，只是在完成对所有 确定型和统计型的服务之后，如果处理机还有剩余时间，才会调度这类任务运行。

2.接纳控制 对于不同的服务质量保证和不同的服务所采用的接纳控制条件是不一样的，在这里只 是讨论接纳控制条件中最基本的问题。 由磁盘送出的。在每一个周期中，每部电影都将播放一帧。每一帧包含了Ki个盘块，这样 处理机在每个周期将处理K、K2、、K、""、K序列盘块中的数据。我们必须了解媒体 服务器的传送速率能否保证SRT任务播放的实时性，为此需要进行两方面的计算：①计算 播放一帧时需要的总时间。②计算媒体服务器传送每一帧数据所需的时间，进而计算出每 一个周期需要的总时间。如果每一个周期都播放一顿时所需的总服务时间都能大于媒体服务 器在相应周期传送相关数据所需的总时间，那么就可以保证所有任务的实时性，反之则不能。 对于确定型的保证和统计型的保证，在计算方法上是完全相同的，差别仅在于所使用 的参数有所不同。对于确定型的保证，在计算中所采用的应当是最坏情况下的参数，如磁 盘的寻道时间最长，而对于统计型的保证所用的应当是统计性参数。 /11.6多媒体存储器的分配方法 在媒体服务器中，为多媒体文件分配存储空间主要考虑的问题是，如何能使磁盘上的 数据快速地传送到输出设备上，以保证SRT任务的实时性。为此采取了与传统文件服务器 截然不同的文件分配方法。

11.6.1交叉连续存放方式

1.多媒体文件存放中的问题 多媒体文件存放最重要的要求是，存放在硬盘上的数据如何能快速地传送到输出设备 上，不会发生因送出数据不及时而使屏幕上的画面发生颤动。在采用离散分配方式时，在 磁盘传输速率足够高的情况下，送出数据不够及时最主要的原因是在传输一帧的过程中需 要进行多次寻道，由于寻道和磁盘旋转延迟通常都需要数十毫秒，很难及时将数据送出。 因此，多媒体文件都采用连续文件。 368