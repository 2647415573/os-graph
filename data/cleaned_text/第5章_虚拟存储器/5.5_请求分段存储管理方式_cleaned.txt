计算机操作系统

5.4.3“抖动”的预防方法 一一← 为了保证系统具有较大的吞吐量，必须防止“抖动”的发生。目前已有许多防止“抖 动”发生的方法。这些方法几乎都是采用调节多道程序度来控制“抖动”发生的。下面介 绍几个较常用的预防“抖动”发生的方法。

1.采取局部置换策略 在页面分配和置换策略中，如果采取的是可变分配方式，则为了预防发生“抖动”， 可采取局部置换策略。根据这种策略，当某进程发生缺页时，只能在分配给自己的内存空 间内进行置换，不允许从其它进程去获得新的物理块。这样，即使该进程发生了“抖动”， 也不会对其它进程产生影响，于是可把该进程“抖动”所造成的影响限制在较小的范围内。 该方法虽然简单易行，但效果不是很好，因为在某进程发生“抖动”后，它还会长期处在 磁盘I/O的等待队列中，使队列的长度增加，这会延长其它进程缺页中断的处理时间，也 就是延长了其它进程对磁盘的访问时间。

2.把工作集算法融入到处理机调度中 当调度程序发现处理机利用率低下时，它将试图从外存调入一个新作业进入内存，来 改善处理机的利用率。如果在调度中融入了工作集算法，则在调度程序从外存调入作业之 前，必须先检查每个进程在内存的驻留页面是否足够多。如果都已足够多，此时便可以从 外存调入新的作业，不会因新作业的调入而导致缺页率的增加：反之，如果有些进程的内存 页面不足，则应首先为那些缺页率居高的作业增加新的物理块，此时将不再调入新的作业。

3.利用"L=S"准则调节缺页率 Denning于1980年提出了“L=S”的准则来调节多道程序度，其中L是缺页之间的平 均时间，S是平均缺页服务时间，即用于置换一个页面所需的时间。如果是L远比S大， 说明很少发生缺页，磁盘的能力尚未得到充分的利用：反之，如果是L比S小，则说明频 繁发生缺页，缺页的速度已超过磁盘的处理能力。只有当L与S接近时，磁盘和处理机都 可达到它们的最大利用率。理论和实践都已证明，利用“L=S”准则，对于调节缺页率是 十分有效的。

4.选择暂停的进程 当多道程序度偏高时，已影响到处理机的利用率，为了防止发生“抖动”，系统必须 减少多道程序的数目。此时应基于某种原则选择暂停某些当前活动的进程，将它们调出到 磁盘上，以便把腾出的内存空间分配给缺页率发生偏高的进程。系统通常都是采取与调度 程序一致的策略，即首先选择暂停优先级最低的进程，若需要，再选择优先级较低的进程。 当内存还显拥挤时，还可进一步选择暂停一个并不十分重要、但却较大的进程，以便能释 放出较多的物理块，或者暂停剩余执行时间最多的进程等。 /5.5请求分段存储管理方式 在分页基础上建立的请求分页式虚拟存储器系统，是以页面为单位进行换入、换出的。 172  第五章虚拟存储器 而在分段基础上所建立的请求分段式虚拟存储器系统，则是以分段为单位进行换入、换出 的。它们在实现原理以及所需要的硬件支持上都是十分相似的。在请求分段系统中，程序 运行之前，只需先调入少数几个分段(不必调入所有的分段)便可启动运行。当所访问的段 不在内存中时，可请求OS将所缺的段调入内存。像请求分页系统一样，为实现请求分段 存储管理方式，同样需要一定的硬件支持和相应的软件。

5.5.1请求分段中的硬件支持 为了实现请求分段式存储管理，应在系统中配置多种硬件机构，以支持快速地完成请 求分段功能。与请求分页系统相似，在请求分段系统中所需的硬件支持有段表机制、缺段 中断机构，以及地址变换机构。

1.请求段表机制 在请求分段式管理中所需的主要数据结构是请求段表。在该表中除了具有请求分页机 制中有的访问字段A、修改位M、存在位P和外存始址四个字段外，还增加了存取方式字 段和增补位。这些字段供程序在调进、调出时参考。下面给出请求分段的段表项。 段名」段长 段基址 存取方式|访问字段A修改位M丨存在位P」增补位 」外存始址 在段表项中，除了段名（号）、段长、段在内存中的起始地址（段基址)外，还增加了以下 字段：

（1）存取方式。由于应用程序中的段是信息的逻辑单位，可根据该信息的属性对它实 施保护，故在段表中增加存取方式字段，如果该字段为两位，则存取属性是只执行、只读 和允许读/写。

（2）访问字段A。其含义与请求分页的相应字段相同，用于记录该段被访问的频繁程 度。提供给置换算法选择换出页面时参考。

（3）修改位M。该字段用于表示该页在进入内存后是否已被修改过，供置换页面时 参考。

(4）存在位P。该字段用于指示本段是否已调入内存，供程序访问时参考。

（5）增补位。这是请求分段式管理中所特有的字段，用于表示本段在运行过程中是否 做过动态增长。

（6）外存始址。指示本段在外存中的起始地址，即起始盘块号。

2.缺段中断机构 在请求分段系统中采用的是请求调段策略。每当发现运行进程所要访问的段尚未调入 内存时，便由缺段中断机构产生一缺段中断信号，进入OS后，由缺段中断处理程序将所 需的段调入内存。与缺页中断机构类似，缺段中断机构同样需要在一条指令的执行期间产 生和处理中断，以及在一条指令执行期间，可能产生多次缺段中断。但由于分段是信息的 逻辑单位，因而不可能出现一条指令被分割在两个分段中，和一组信息被分割在两个分段 中的情况。缺段中断的处理过程如图5-12所示。由于段不是定长的，这使对缺段中断的处 理要比对缺页中断的处理复杂。 173  计算机操作系统 虚段S不在内存 阻塞请求进程 内存中有合适的 否 空闲区吗？ 是 内存中所有空闲 否 从外存读入段S 分区之和≥S？ 是 修改段表及内存空区链 空区拼接，以形成 淘汰一个或几个实段， 个合适的空区 以形成一个合适空区 唤醒请求进程 A 返回 图5-12请求分段系统中的中断处理过程

3.地址变换机构 请求分段系统中的地址变换机构是在分段系统地址变换机构的基础上形成的。因为被访 问的段并非全在内存，所以在地址变换时，若发现所要访问的段不在内存，必须先将所缺的 段调入内存，并修改段表，然后才能再利用段表进行地址变换。为此，在地址变换机构中又 增加了某些功能，如缺段中断的请求及处理等。图5-13示出了请求分段系统的地址变换过程。 访问[s][w] 否 分段越界 w≤段长? 中断处理 是 否 分段保护 符合存取方式？ 中断处理 是 否 缺段 段S在主存？ 中断处理 是 修改访问字段，如 写访问，置修改位=1 形成访问主存地址（A）=（主存始址)+（位移量w) 访问[s][w] 图5-13请求分段系统的地址变换过程 174  第五章虚拟存储器人

5.5.2分段的共享与保护 本章前面曾介绍过分段存储管理方式的优点是便于实现分段的共享与保护，也扼要地 介绍了实现分段共享的方法。本小节将进一步介绍为了实现分段共享，还应配置相应的数 据结构一共享段表，以及对共享段进行操作的过程。

1.共享段表 为了实现分段共享，可在系统中配置一张共享段表，所有各共享段都在共享段表中占 有一表项。在表项的上面记录了共享段的段号、段长、内存始址、状态(存在)位、外存始 址以及共享计数等信息。接下去就是记录了共享此分段的每个进程的情况。共享段表如图 5-14所示，其中各项说明如下：

（1）共享进程计数count。非共享段仅为一个进程所需要。当进程不再需要该段时，可 立即释放该段，并由系统回收该段所占用的空间。而共享段是为多个进程所需要的，为记 录有多少进程正在共享该分段，须设置共享进程计数count。当某进程不再需要而释放它时， 需要它，仅当所有共享该段的进程全都不再需要它时，此时count为0，才由系统回收该段 所占内存区。

（2）存取控制字段。对于一个共享段，应为不同的进程赋予不同的存取权限。例如， 对于文件主，通常允许他读和写；而对其它进程，则可能只允许读，甚至只允许执行。

（3）段号。对于一个共享段，在不同的进程中可以具有不同的段号，每个进程可用自 已进程的段号去访问该共享段。 段名 段长 内存始址 状态 外存始址 共享进程计数count 状态 进程名 进程号 段号 存取控制 ： 共享段表 图5-14共享段表项

2.共享段的分配与回收 1）共享段的分配 由于共享段是供多个进程所共享的，因此，对共享段的内存分配方法，与非共享段的 内存分配方法有所不同。在为共享段分配内存时，对第一个请求使用该共享段的进程，由 系统为该共享段分配一物理区，再把共享段调入该区，同时将该区的始址填入请求进程的 段表的相应项中，还须在共享段表中增加一表项，填写请求使用该共享段的进程名、段号 和存取控制等有关数据，把count置为1。当又有其它进程需要调用该共享段时，由于该共 享段已被调入内存，故此时无须再为该段分配内存，而只需在调用进程的段表中增加一表 175  计算机操作系统 项，填写该共享段的物理地址。在共享段的段表中增加一个表项，填上调用进程的进程名、 该共享段在本进程中的段号、存取控制等，再执行count=count+1操作，以表明有两个进程 共享该段。以后，凡有进程需要访问此共享段的，都按上述方式在共享段的段表中增加一 个表项。 2）共享段的回收 当共享此段的某进程不再需要该段时，应将该段释放，包括撤消在该进程段表中共享 段所对应的表项，以及执行count=count-1操作。若结果为0，则须由系统回收该共享段的 物理内存，以及取消在共享段表中该段所对应的表项，表明此时已没有进程使用该段；否 则（减1结果不为0)，只是取消调用者进程在共享段表中的有关记录。

3.分段保护 在分段系统中，由于每个分段在逻辑上是相对独立的，因而比较容易实现信息保护。 目前，常采用以下几种措施来确保信息的安全。 1）越界检查 越界检查是利用地址变换机构来完成的。为此，在地址变换机构中设置了段表寄存器， 用于存放段表始址和段表长度信息。在进行地址变换时，首先将逻辑地址空间的段号与段 表长度进行比较，如果段号等于或大于段表长度，将发出地址越界中断信号。此外，还在 段表中为每个段设置有段长字段，在进行地址变换时，还要检查段内地址是否等于或大于 段长，若大于段长，将产生地址越界中断信号，从而保证了每个进程只能在自已的地址空 间内运行。 2）存取控制检查 存取控制检查是以段为基本单位进行的。为此，在段表的每个表项中都设置了一个“存 取控制”字段，用于规定对该段的访问方式。通常的访问方式有：

（1）只读，即只允许进程对该段中的程序或数据进行读访问；

（2）只执行，即只允许进程调用该段去执行，但不准读该段的内容，更不允许对该段 执行写操作；

(3）读/写，即允许进程对该段进行读/写访问。 对于共享段而言，存取控制就显得尤为重要，因而对不同的进程应赋予不同的读写权 限。这时，既要保证信息的安全性，又要满足运行需要。例如，对于一个企业的财务账目， 应该只允许会计人员进行读或写，充许领导及有关人员去读。而对于一般人员，则既不准 读，更不能写。值得一提的是，这里所介绍的存取控制检查是基于硬件实现的，它能较好 地保证信息的安全，因为攻击者很难对存取控制字段进行修改。 3）环保护机构 这是一种功能较完善的保护机制。在该机制中规定：低编号的环具有高优先权。OS核 心处于0号环内；某些重要的实用程序和操作系统服务占居中间环；而一般的应用程序， 则被安排在外环上。在环系统中，程序的访问和调用应遵循以下规则：

(1）一个程序可以访问驻留在相同环或较低特权环(外环)中的数据；

(2）一个程序可以调用驻留在相同环或较高特权环（内环)中的服务。 图5-15示出了在环保护机构中的调用程序和数据访问的关系。 176  第五章虚拟存储器 周用 数据访向 返 O 数据访问 (a)程序间的控制传输 (b)数据访问 图5-15环保护机构

1.常规存储器管理方式具有哪两大特征？它对系统性能有何影响？

2.什么是程序运行时的时间局限性和空间局限性？

3.虚拟存储器有哪些特征？其中最本质的特征是什么？

4.实现虚拟存储器需要哪些硬件支持？

5.实现虚拟存储器需要哪几个关键技术？

6.在请求分页系统中，页表应包括哪些数据项？每项的作用是什么？

7.试比较缺页中断机构与一般的中断，它们之间有何明显的区别？

8.试说明请求分页系统中的地址变换过程。

9.何谓固定分配局部置换和可变分配全局置换的内存分配策略？

10.在请求分页系统中，应从何处将所需页面调入内存？

11.试说明在请求分页系统中页面的调入过程。

12.在请求分页系统中，常采用哪几种页面置换算法？

13.在一个请求分页系统中，采用FIFO页面置换算法时，假如一个作业的页面走向为

4、3、2、1、4、3、5、4、3、2、1、5，当分配给该作业的物理块数M分别为3和4时， 试计算在访问过程中所发生的缺页次数和缺页率，并比较所得结果。

14.实现LRU算法所需的硬件支持是什么？

15.试说明改进型Clock置换算法的基本原理。

16.影响页面换进换出效率的若干因素是什么？

17.页面缓冲算法的主要特点是什么？它是如何降低页面换进、换出的频率的？

18.在请求分页系统中，产生“抖动”的原因是什么？

19.何谓工作集？它是基于什么原理确定的？

20.当前可以利用哪几种方法来防止“抖动”？

21.试说明如何利用“L=S”准则来调节缺页率，以避免“抖动”的发生。

22.为了实现请求分段式存储管理，应在系统中增加配置哪些硬件机构？

23.在请求段表机制中，应设置哪些段表项？

24.说明请求分段系统中的缺页中断处理过程。

25.请对共享段表中的各项作简要说明。

26.如何实现共享分段的分配和回收？ 177