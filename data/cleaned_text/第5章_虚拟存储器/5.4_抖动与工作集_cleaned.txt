第五章虚拟存储器 和访问实际物理地址所需的时间(t): EAT=+t

(2）被访问页在内存中，且其对应的页表项不在快表中。 数据，另外还需要更新快表。所以，这种情况内存的有效访问时间可分为查找快表的时间、 查找页表的时间、修改快表的时间和访问实际物理地址的时间： EAT=+t++t=2x(a+t)

（3）被访问页不在内存中。 因为被访问页不在内存中，需要进行缺页中断处理，所以这种情况的内存的有效访问 时间可分为查找快表的时间、查找页表的时间、处理缺页中断的时间、更新快表的时间和 访问实际物理地址的时间： 假设缺页中断处理时间为ε，则 EAT=+t+++t=8+2（+t) 上面的几种讨论没有考虑快表的命中率和缺页率等因素，因此，加入这两个因素后， 内存的有效访问时间的计算公式应为 EAT=+axt+(1-a)x[t+fx(s+入+t)+(1-f)x(+t)] 式中，a表示命中率，f表示缺页率。 如果不考虑命中率，仅考虑缺页率，即上式中的入=0和a=0，设缺页中断处理时间 为中，由此可得 x(-)+(+)x+1=

5.4“抖动”与工作集 由于请求分页式虚拟存储器系统的性能优越，在正常运行情况下，它能有效地减少内 存碎片，提高处理机的利用率和吞吐量，故是目前最常用的一种系统。但如果在系统中运 行的进程太多，进程在运行中会频繁地发生缺页情况，这又会对系统的性能产生很大的影 响，故还须对请求分页系统的性能做简单的分析。

5.4.1多道程序度与“抖动”

1.多道程序度与处理机的利用率 由于虚拟存储器系统能从逻辑上扩大内存，这时，只需装入一个进程的部分程序和数 据便可开始运行，故人们希望在系统中能运行更多的进程，即增加多道程序度，以提高处 理机的利用率。但处理机的实际利用率却如图5-9中的实线所示。其中横轴表示多道程序 的数量，纵轴表示相应的处理机的利用率。在横轴的开始部分，随着进程数目的增加，处 理机的利用率急剧增加：但到达N时，其增速就明显地减慢了，当到达Nmax时，处理机 的利用率达到最大，以后先开始缓慢下降，当到达N2点时，若再继续增加进程数，利用率 将加速下降而趋于0，见图5-9中的N点。之所以会发生在后面阶段利用率趋于0的情况， 是因为在系统中已发生了“抖动”。 169  计算机操作系统 利用率 CPU饱和度 100% L/S N NXNN N3 抖动 图5-9处理机的利用率

2.产生“抖动”的原因 发生“抖动”的根本原因是，同时在系统中运行的进程太多，由此分配给每一个进程 的物理块太少，不能满足进程正常运行的基本要求，致使每个进程在运行时，频繁地出现 缺页，必须请求系统将所缺之页调入内存。这会使得在系统中排队等待页面调进/调出的进 程数目增加。显然，对磁盘的有效访问时间也随之急剧增加，造成每个进程的大部分时间 都用于页面的换进/换出，而几乎不能再去做任何有效的工作，从而导致发生处理机的利用 率急剧下降并趋于0的情况。我们称此时的进程是处于“抖动”状态。 “抖动”是在进程运行中出现的严重问题，必须采取相应的措施来解决它。为此有不 少学者对它进行了深入的研究，提出了许多非常有效的解决方法。由于“抖动”的发生与 系统为进程分配物理块的多少有关，于是有人提出了关于进程“工作集”的概念。

5.4.2工作集

1.工作集的基本概念 进程发生缺页率的时间间隔与进程所获得的物理块数有关。图5-10示出了缺页率与物 理块数之间的关系。从图中可以看出，缺页率随着所分配物理块数的增加明显地减少，当 物理块数超过某个数目时，再为进程增加一物理块，对缺页率的改善已不明显。可见，此 时已无必要再为它分配更多的物理块。反之，当为某进程所分配的物理块数低于某个数目 时，每减少一块，对缺页率的影响都变得十分明显，此时又应为该进程分配更多的物理块。 为了能清楚地说明形成图5-10所示曲线的原因，还须先介绍关于“工作集”的概念。 关于工作集的理论是1968年由Denning提出并推广的。Denning认为，基于程序运行 时的局部性原理得知，程序在运行期间，对页面的访问是不均匀的，在一段时间内仅局限 于较少的页面，在另一段时间内，又可能仅局限于对另一些较少的页面进行访问。这些页 面被称为活跃页面。如果能够预知程序在某段时间间隔内要访问哪些页面，并将它们调入 内存，将会大大降低缺页率，从而可显著地提高处理机的利用率。 170  第五章 虚拟存储器 缺页率 上限 下限 物理块数 n 图5-10缺页率与物理块数之间的关系

2.工作集的定义 所谓工作集，是指在某段时间间隔里，进程实际所要访问页面的集合。Denning 指 出，虽然程序只需要少量的几页在内存便可运行，但为了较少地产生缺页，应将程序的全 部工作集装入内存中。然而我们无法事先预知程序在不同时刻将访问哪些页面，故仍只有 像置换算法那样，用程序的过去某段时间内的行为作为程序在将来某段时间内行为的近似。 尺寸”（Windowssize)。图5-11示出了某进程访问页面的序列和窗口大小分别为3、4、5 时的工作集。由此可将工作集定义为，进程在时间间隔（t-△，t)中引用页面的集合。 窗口大小 引用页序列 3 4 5 24 24 24 24 15 1524 1524 1524 18 181524 181524 181524 23 231815 23181524 23181524 24 242318 17 172423 17242318 1724231815 18 181724 24 一 一 18 二 一 17 一 一 17 二 15 151718 15171824 一 24 241517 一 17 一 24 一 一 18 182417 图5-11窗口为3、4、5时进程的工作集 工作集w(t，△)是二元函数，即在不同时间t的工作集大小不同，所含的页面数也不同； 工作集与窗口尺寸有关，是窗口尺寸△的非降函数(nondecreasingfunction)，从图5-11 也可看出这点，即 w(t, △) w(t,△+1) 171  计算机操作系统

5.4.3“抖动”的预防方法 一一← 为了保证系统具有较大的吞吐量，必须防止“抖动”的发生。目前已有许多防止“抖 动”发生的方法。这些方法几乎都是采用调节多道程序度来控制“抖动”发生的。下面介 绍几个较常用的预防“抖动”发生的方法。

1.采取局部置换策略 在页面分配和置换策略中，如果采取的是可变分配方式，则为了预防发生“抖动”， 可采取局部置换策略。根据这种策略，当某进程发生缺页时，只能在分配给自己的内存空 间内进行置换，不允许从其它进程去获得新的物理块。这样，即使该进程发生了“抖动”， 也不会对其它进程产生影响，于是可把该进程“抖动”所造成的影响限制在较小的范围内。 该方法虽然简单易行，但效果不是很好，因为在某进程发生“抖动”后，它还会长期处在 磁盘I/O的等待队列中，使队列的长度增加，这会延长其它进程缺页中断的处理时间，也 就是延长了其它进程对磁盘的访问时间。

2.把工作集算法融入到处理机调度中 当调度程序发现处理机利用率低下时，它将试图从外存调入一个新作业进入内存，来 改善处理机的利用率。如果在调度中融入了工作集算法，则在调度程序从外存调入作业之 前，必须先检查每个进程在内存的驻留页面是否足够多。如果都已足够多，此时便可以从 外存调入新的作业，不会因新作业的调入而导致缺页率的增加：反之，如果有些进程的内存 页面不足，则应首先为那些缺页率居高的作业增加新的物理块，此时将不再调入新的作业。

3.利用"L=S"准则调节缺页率 Denning于1980年提出了“L=S”的准则来调节多道程序度，其中L是缺页之间的平 均时间，S是平均缺页服务时间，即用于置换一个页面所需的时间。如果是L远比S大， 说明很少发生缺页，磁盘的能力尚未得到充分的利用：反之，如果是L比S小，则说明频 繁发生缺页，缺页的速度已超过磁盘的处理能力。只有当L与S接近时，磁盘和处理机都 可达到它们的最大利用率。理论和实践都已证明，利用“L=S”准则，对于调节缺页率是 十分有效的。

4.选择暂停的进程 当多道程序度偏高时，已影响到处理机的利用率，为了防止发生“抖动”，系统必须 减少多道程序的数目。此时应基于某种原则选择暂停某些当前活动的进程，将它们调出到 磁盘上，以便把腾出的内存空间分配给缺页率发生偏高的进程。系统通常都是采取与调度 程序一致的策略，即首先选择暂停优先级最低的进程，若需要，再选择优先级较低的进程。 当内存还显拥挤时，还可进一步选择暂停一个并不十分重要、但却较大的进程，以便能释 放出较多的物理块，或者暂停剩余执行时间最多的进程等。 /5.5请求分段存储管理方式 在分页基础上建立的请求分页式虚拟存储器系统，是以页面为单位进行换入、换出的。 172