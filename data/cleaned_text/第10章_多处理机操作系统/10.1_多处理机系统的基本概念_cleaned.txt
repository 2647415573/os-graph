第十章多处理机操作系统 第十章多处理机操作系统 计算机发展的历史清楚地表明：提高计算机系统性能的主要途径有两条：一是提高构 成计算机的元器件的运行速度，特别是处理器芯片的速度，二是改进计算机系统的体系结 构，特别是在系统中引入多个处理器或多台计算机，以实现对信息的高度并行处理，达到 提高系统吞吐量和可靠性的目的。早期的计算机系统都是单处理机系统，到20世纪70年 代出现了多处理器系统即MPS(MultiprocessorSystem)；进入90年代中后期，功能较强的主 机系统和服务器几乎都毫无例外地采用了多处理器(机)系统，处理器的数目可从两个至数 千个，甚至更多。

10.1多处理机系统的基本概念

10.1.1多处理机系统的引入 一← 进入70年代后，已采用多处理机的系统结构从提高运行速度方面来增强系统性能。实 际上，多处理机系统MPS就是采用并行技术，令多个单CPU同时运行，使总体的计算能 力比单CPU计算机系统的强大得多。归结起来，引I入多处理机系统的原因大致如下：

1.CPU的时钟频率问题 在早期，人们首先是采用提高CPU时钟频率的方法提高计算速度。CPU的时钟频率 已从早期的每秒钟嘀嗒数十次，发展到现在的数兆赫兹(GHz)，这主要得益于芯片制造工艺 水平的提高。 但是，这种方法的收效是有极限的。因为CPU所运算的指令或数据及其结果都是以电 子信号的方式，通过传输介质送入或送出。因此，在一个时钟周期内，应至少保证信号在 传输介质中能完成一个往返的传输。换言之，CPU的时钟频率将受限于信号在介质上的传 输时间。电子信号在真空中的传输速度是30cm/ns，而在铜线或光纤中的传输速度大约是 20cm/ns。这意味着，对于1GHz的计算机，信号的路径长度不能超过200mm，对于100GHz 的计算机，则不能超过2mm；对于1000GHz(1THz)的计算机，则传输介质的长度必须在 100um以下。显然，这对缩小元器件体积的要求越来越高。 但是，随着元器件，尤其是CPU体积的缩小，散热又成了一个棘手的问题。CPU的 时钟频率越高，产生的热量也越多，散热问题越难解决。目前，在高端的Pentium系统中， CPU散热器的体积已经超过了其本身的体积。可见，目前的这种依靠提高CPU时钟频率来 提高计算机运算速度（系统性能）的方法，已经接近了极限。 307  计算机操作系统

2.增加系统吞吐量 随着系统中处理机数目的增加，系统的处理能力也相应增强，显然，这可使系统在单 位时间内完成更多的工作，即增加系统吞吐量。当然，为了能使多个处理机协调地工作， 系统也必须为此付出一定的开销。因此，利用n台处理机运行时所获得的加速比，并不能 达到一台处理机时的n倍。

3.节省投资 在达到相同处理能力的情况下，与n台独立的计算机相比，采用具有n个处理机的系 统，可以更节省费用。这是因为，此时的n个处理机可以做在同一个机箱中，使用同一个 电源和共享一部分资源，如外设、内存等。

4.提高系统可靠性 在MPS中，通常都具有系统重构的功能，即当其中任何一个处理机发生故障时，系统 可以进行重构，然后继续运行。亦即可以立即将故障处理机上所处理的任务迁移到其它的 一个或多个处理机上继续处理，保证整个系统仍能正常运行，其影响仅仅表现为系统性能 上的少许降低。例如，对于一个含有10个CPU的系统，如果其中某一个CPU出现故障， 整个系统性能大约降低10%。

10.1.2多处理机系统的类型 此之间交换大量的信息。为此，必须将这些处理机加以互连。但是，不同的互连技术形成 了不同类型的系统及软件组织结构。其所构成的系统在性能、成本等各方面也存在着差异。 一般而言，可以从不同角度对多处理机系统的结构进行如下的分类：

1.紧密耦合MPS和松弛耦合MPS 从多处理机之间耦合的紧密程度上，可把MIPS分为两类：

（1）紧密耦合（TightlyCoupled)MPS。紧密耦合通常是通过高速总线或高速交叉开关来实现 多个处理器之间的互连的。系统中的所有资源和进程都由操作系统实施统一的控制和管理。这 类系统有两种实现方式：①多处理器共享主存储器系统和IO设备，每台处理器都可以对整 个存储器进行访问，访问时间一般需要10～50ns；②将多处理器与多个存储器分别相连，或 将主存储器划分为若干个能被独立访问的存储器模块，每个处理器对应一个存储器或存储器模 块，而且每个处理器只能访问其所对应的存储器或存储器模块，以便多个处理机能同时对主存 进行访问。在第二种互连方式中，处理器之间的访问采用消息通信方式，一条短消息可在10～ 50us之内发出，它较第一种互连方式慢，且软件实现复杂，但使用构件较为方便。

(2）松散耦合(LooselyCoupled)MPS。在松散耦合MPS中，通常是通过通道或通信线路 来实现多台计算机之间的互连。每台计算机都有自己的存储器和IVO设备，并配置了OS 来管理本地资源和在本地运行的进程。因此，每一台计算机都能独立地工作，必要时可通 过通信线路与其它计算机交换信息，以及协调它们之间的工作。但在这种类型的系统中， 消息传递的时间一般需要10～50ms。

2.对称多处理器系统和非对称多处理器系统 根据系统中所用处理器的相同与否，可将MPS分为如下两类： 308 

(1）对称多处理器系统SMPS(SymmetricMultiprocessorSystem)。在系统中所包含的各 处理器单元，在功能和结构上都是相同的，当前的绝大多数MPS 都属于SMP系统。例如， IBM公司的SR/6000ModelF50，便是利用4片PowerPC处理器构成的。

(2）非对称多处理器系统ASMPS（AsymmetricMultiprocessorSystem)。在系统中有多种类 型的处理单元，它们的功能和结构各不相同。系统中只有一个主处理器，有多个从处理器。

110.2多处理机系统的结构 在采用共享存储器方式的多处理机系统中，若干个处理器可以共享访问一个公用的 RAM，而这个RAM可以由多个不同的存储器模块组成。系统为运行在任何一个CPU上的 程序提供了一个完整的虚拟地址空间视图。每个存储器地址单元均可被所有的CPU进行读 写。对于这个性质，一方面可以方便地利用存储器单元实现处理机之间的通信；另一方面 也必须在进程同步、资源管理及调度上，做出有别于单处理机系统的特殊处理。但是，由 于程序或进程对不同存储器模块的读写速度可能存在的差异，形成了不同的多处理机体系 结构：UMA多处理机结构和NUMA多处理机结构。

10.2.1UMA多处理机系统的结构 一一 一一一 所谓UMA(UniformMemoryAccess)，即统一内存访问（也称一致性内存访问)。在这种 结构的多处理机系统中，各处理器单元（CPU)在功能和结构上都是相同的，在处理上没有主 从之分（即属于SMP系统），每个处理机可以访问不同模块中的存储器单元，并且对于每个 存储器单元的读写速度是相同的。实际上，根据处理机与存储器模块的连接方式的不同， 可以具体分为以下三种结构：

1.基于单总线的SMP结构 如图10-1(a)所示，在这种结构的系统中，把多个处理器与一个集中的存储器相连，所 有处理器都通过公用总线访问同一个系统的物理存储器，每个处理机可以访问不同存储器 模块中的单元，以及与其它处理机进行通信。这就意味着该系统只需要运行操作系统的一 个拷贝，因此，为单处理器系统编写的应用程序可以直接移植到这种系统中运行。实际上， 这种结构的SMP系统也被称为均匀存储器系统，即对于所有处理器来说，访问存储器中的 任何地址所需的时间都是一致的。 例如，当处理机需要读取某个存储器模块单元的内容（即一个存储器字）时，首先检查 总线的忙闲状态。如果空闲，CPU便将所要访问的存储器地址放到总线上，并插入若干控 制信号，然后等待存储器将所需的存储器字放到总线上；否则，如果总线状态为忙，则CPU 进行等待，直到总线空闲。 显然，这种结构的缺点在于可伸缩性有限。系统中所有CPU对存储器的访问，都需要 通过总线进行。多个CPU可能同时需要对总线进行访问，形成了对总线资源的争夺。随着 CPU数目的增加，由于总线资源的瓶颈效应，对此进行相关协调和管理的难度急剧增加， 从而限制了系统中CPU的数目。一般而言，在这种系统中，CPU的数目在4至20个之间。 对上述的问题，可以通过为每个CPU配置一个高速缓存的方法解决。如图10-1(b)所 309