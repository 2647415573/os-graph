计算机操作系统 void Putbuf(type, number) { Wait(MS(type)); Addbuf(type, number); Signal(MS(type); Signal(RS(type));

3.缓冲区的工作方式 缓冲区可以工作在如下四种工作方式，如图6-27所示。 缓冲池 收容输入 提取输入 hin sin 用户程序 提取输出 收容输出 hout sout 图6-27缓冲区的工作方式

(1）收容输入。输入进程可调用Getbuf(emq)过程，从空缓冲队列emq的队首摘下一空 缓冲区，把它作为收容输入工作缓冲区hin。然后，把数据输入其中，装满后再调用 Putbuf(inq，hin）过程，将它挂在输入队列inq队列上。

(2）提取输入。计算进程可调用Getbuf(inq)过程，从输入队列inq的队首取得一缓冲区， 作为提取输入工作缓冲区（sin)，计算进程从中提取数据。计算进程用完该数据后，再调用 Putbuf(emq，sin）过程，将它挂到空缓冲队列emq上。

(3）收容输出。计算进程可调用Getbuf(emq)，从空缓冲队列emq的队首取得一空缓冲， 作为收容输出工作缓冲区hout。当其中装满输出数据后，又调用Putbuf(outq，hout)过程， 将它挂在outq末尾。

（4）提取输出。输出进程可调用Getbuf（outq）过程，从输出队列的队首取得一装满输出 数据的缓冲区，作为提取输出工作缓冲区sout。在数据提取完后，再调用Putbuf(emq，sout) 过程，将它挂在空缓冲队列末尾。

6.8 磁盘存储器的性能和调度 磁盘存储器是计算机系统中的最重要的存储设备，在其中存放了大量的文件。对文件 的读、写操作都将涉及到对磁盘的访问。磁盘I/O速度的高低和磁盘系统的可靠性，将直 接影响到系统的性能。可以通过多种途经来改善磁盘系统的性能。首先可通过选择好的磁 盘调度算法，以减少磁盘的寻道时间：其次是提高磁盘IVO速度，以提高对文件的访问速 度；第三采取冗余技术，提高磁盘系统的可靠性，建立高度可靠的文件系统。第二和第三 点我们将它放在磁盘存储器管理一章中介绍。 214  第六章输入输出系统

6.8.1磁盘性能简述 磁盘设备是一种相当复杂的机电设备，在此仅对磁盘的某些性能，如数据的组织、磁 盘的类型和访问时间等方面做扼要的阐述。

1.数据的组织和格式 磁盘设备可包括一个或多个物理盘片，每个磁盘片分一个或两个存储面（Surface）（见图 起见，在每条磁道上可存储相同数目的二进制位。这样，磁盘密度即每英寸中所存储的位 数，显然是内层磁道的密度较外层磁道的密度高。每条磁道又被从逻辑上划分成若干个扇 区（Sectors)，软盘大约为8至32个扇区，硬盘则可多达数百个，图6-28(b）显示了一个磁道 分成8个扇区的布局情况。一个扇区称为一个盘块（或数据块），各扇区之间保留一定的间 隙(Gap)。 7 盘面9 盘面8 写 盘面7 磁道 HP 19 盘面6 扇区 号 盘面5 磁道间隔 盘面4 盘面3 扇区间隔 盘面2 盘面1 盘面0 读写磁头 轴心 主杆 (a)磁盘驱动器的结构 (b)磁盘的数据布局 图6-28磁盘的结构和布局 一个物理记录存储在一个扇区上，磁盘上能存储的物理记录块数目是由扇区数、磁道 数以及磁盘面数所决定的。例如，一个10GB容量的磁盘，有8个双面可存储盘片，共16 个存储面（盘面），每面有16383个磁道（也称柱面），63个扇区。 为了提高磁盘的存储容量，充分利用磁盘外面磁道的存储能力，现代磁盘不再把内外 磁道划分为相同数目的扇区，而是利用外层磁道容量较内层磁道大的特点，将盘面划分成 若干条环带，同一环带内的所有磁道具有相同的扇区数。显然外层环带的磁道拥有较内层 环带的磁道更多的扇区。为了减少这种磁道和扇区在盘面分布的几何形式变化对驱动程序 的影响，大多数现代磁盘都隐藏了这些细节，仅向操作系统提供虚拟几何的磁盘规格，而 不是实际的物理几何规格。 为了在磁盘上存储数据，必须先将磁盘低级格式化。图6-29示出了一种温盘（温切斯 215  计算机操作系统 特盘)中一条磁道格式化的情况。其中每条磁道(Track)含有30个固定大小的扇区(Sectors)， 每个扇区容量为600个字节，其中512个字节存放数据，其余的用于存放控制信息。每个 作为该字段的定界符，利用磁道号（Track)、磁头号（Head#）及扇区号（Sectors#）三者来标识 一个扇区；CRC字段用于段校验。②数据字段（DataField)，存放512个字节的数据。存放 512个字节的数据。值得强调的是，在磁盘一个盘面的不同磁道（Track）、每个磁道的不同 扇区（Sector)，以及每个扇区的不同字段（Field)之间，为了简化和方便磁头的辨识，都设置 了一个到若干个字节不同长度的间距（Gap，也称间隙)。 Sector Physical Sector O Physical Sector1 Physical Sector 29 — ID Data D Data D Data FieldGap FieldGap Gap GapFieldGap Field Gap GapFieldGapFieldGap 102031292 29 3 1292293 Byte 17 20 17 4151520

600 Byte/Sector SynchTrackHeadSector Synch CRC Data CRC Byte # # # Byte Byte1 2 512 2 图6-29磁盘的格式化 在磁盘格式化完成后，一般要对磁盘进行分区。在逻辑上，每个分区就是一个独立的 逻辑磁盘。每个分区的起始扇区和大小都记录在磁盘0扇区的主引导记录分区表所包含的 分区表中。在这个分区表中必须有一个分区被标记成活动的（即引导块），以保证能够从硬 盘引导系统。 但是，在真正可以使用磁盘前，还需要对磁盘进行一次高级格式化，即设置一个引导块、 空闲存储管理、根目录和一个空文件系统，同时在分区表中标记该分区所使用的文件系统。

2.磁盘的类型 对于磁盘，可以从不同的角度进行分类。最常见的有：将磁盘分成硬盘和软盘、单片盘 和多片盘、固定头磁盘和活动头（移动头）磁盘等。下面仅对固定头磁盘和移动头磁盘做些介绍。

(1）固定头磁盘。这种磁盘在每条磁道上都有一读/写磁头，所有的磁头都被装在一刚 性磁臂中。通过这些磁头可访问所有各磁道，并进行并行读/写，有效地提高了磁盘的I/O 速度。这种结构主要用于大容量磁盘上。

（2）移动头磁盘。每一个盘面仅配有一个磁头，也被装入磁臂中。为能访问该盘面上 的所有磁道，该磁头必须能移动以进行寻道。可见，移动磁头仅能以串行方式读/写，致使 其IO速度较慢；但由于其结构简单，敌仍广泛应用于中小型磁盘设备中。在微型机上配 置的温盘和软盘，都采用移动磁头结构，故本节主要针对这类磁盘的IO进行讨论。

3.磁盘访问时间 磁盘设备在工作时以恒定速率旋转。为了读或写，磁头必须能移动到所指定的磁道上， 并等待所指定的扇区的开始位置旋转到磁头下，然后再开始读或写数据。故可把对磁盘的 访问时间分成以下三部分。 216  第六章：输入输出系统

(1）寻道时间Ts。这是指把磁臂(磁头)移动到指定磁道上所经历的时间。该时间是启动 磁臂的时间s与磁头移动n条磁道所花费的时间之和，即 T=mxn+s 其中，m是一常数，与磁盘驱动器的速度有关，对一般磁盘，m=0.2；对高速磁盘，m≤0.1， 磁臂的启动时间约为2ms。这样，对一般的温盘，其寻道时间将随寻道距离的增大而增加， 大体上是5～30ms。

(2）旋转延迟时间T。这是指定扇区移动到磁头下面所经历的时间，不同的磁盘类型中， 甚至更高。对于磁盘旋转延迟时间而言，如硬盘，旋转速度为15000r/min，每转需时4ms 平均旋转延迟时间T.为2ms；而对于软盘，其旋转速度为300r/min或600r/min，这样， 平均T为50～100ms。

（3）传输时间T。这是指把数据从磁盘读出或向磁盘写入数据所经历的时间。T的大 小与每次所读/写的字节数b和旋转速度有关： b T= rN 其中，r为磁盘每秒钟的转数；N为一条磁道上的字节数，当一次读/写的字节数相当于半 条磁道上的字节数时，T与T，相同，因此，可将访问时间T。表示为：

1. b 由上式可以看出，在访问时间中，寻道时间和旋转延迟时间基本上都与所读/写数据的 多少无关，而且它通常占据了访问时间中的大头。例如，我们假定寻道时间和旋转延迟时 间平均为20ms，而磁盘的传输速率为10MB/s，如果要传输10KB，此时总的访问时间为 21ms，可见传输时间所占比例是非常小的。当传输100KB数据时，其访问时间也只是 30ms，即当传输的数据量增大10倍时，访问时间只增加约50%。目前磁盘的传输速率已 达80MB/s以上，数据传输时间所占的比例更低。可见，适当地集中数据（不要太零散）传输， 将有利于提高传输效率。

6.8.2早期的磁盘调度算法 为了减少对文件的访问时间，应采用一种最佳的磁盘调度算法，以使各进程对磁盘的 平均访问时间最小。由于在访问磁盘的时间中主要是寻道时间，因此，磁盘调度的目标是 使磁盘的平均寻道时间最少。目前常用的磁盘调度算法有先来先服务、最短寻道时间优先 及扫描等算法。下面逐一介绍。

1.先来先服务（FCFS） 这是最简单的磁盘调度算法。它根据进程请求访问磁盘的先后次序进行调度。此算法 的优点是公平、简单，且每个进程的请求都能依次地得到处理，不会出现某一进程的请求 长期得不到满足的情况。但此算法由于未对寻道进行优化，致使平均寻道时间可能较长。 图6-30示出了有9个进程先后提出磁盘I/O请求时，按FCFS算法进行调度的情况。这里， 将进程号（请求者)按他们发出请求的先后次序排队。这样，平均寻道距离为55.3条磁道， 与后面即将讲到的几种调度算法相比，其平均寻道距离较大，故FCFS算法仅适用于请求 217  计算机操作系统 磁盘I/O的进程数目较少的场合。

2.最短寻道时间优先（SSTF） 该算法选择这样的进程，其要求访问的磁道与当前磁头所在的磁道距离最近，以使每 次的寻道时间最短，但这种算法不能保证平均寻道时间最短。图6-31示出按SSTF算法进 行调度时，各进程被调度的次序、每次磁头移动的距离，以及9次磁头平均移动的距离。 比较图6-30和图6-31可以看出，SSTF算法平均每次磁头移动的距离明显低于FCFS算法 的距离，因而SSTF较之FCFS有更好的寻道性能，故过去曾一度被广泛采用。 （从100号磁道开始） （从100号磁道开始） 被访问的 移动距离 被访问的 移动距离 下一个磁道号 （磁道数） 下一个磁道号 (磁道数) 55 45 06 10 58 3 58 32 39 19 55 3 18 21 39 16 90 72 38 1 160 70 18 20 150 10 150 132 38 112 160 10 184 146 184 24 平均寻道长度：55.3 平均寻道长度：27.5 图6-30FCFS调度算法 图6-31SSTF调度算法

6.8.3基于扫描的磁盘调度算法

1.扫描(SCAN)算法 SSTF算法的实质是基于优先级的调度算法，因此就可能导致优先级低的进程发生“饥 饿”（Starvation）现象。因为只要不断有新进程的请求到达，且其所要访问的磁道与磁头当 前所在磁道的距离较近，这种新进程的I/O请求必然优先满足。在对SSTF算法略加修改后， 则可防止低优先级进程出现“饥饿”现象。 扫描（SCAN)算法不仅考虑到欲访问的磁道与当前磁道间的距离，更优先考虑的是磁头 当前的移动方向。例如，当磁头正在自里向外移动时，SCAN算法所考虑的下一个访问对 象应是其欲访问的磁道既在当前磁道之外，又是距离最近的。这样自里向外地访问，直至 再无更外的磁道需要访问时，才将磁臂换向为自外向里移动。这时，同样也是每次选择这 样的进程来调度：即要访问的磁道在当前位置内为距离最近者，这样，磁头又逐步地从外 向里移动，直至再无更里面的磁道要访问，从而避免了出现“饥饿”现象。由于在这种算 法中磁头移动的规律颇似电梯的运行，因而又常称之为电梯调度算法。图6-32示出了按 SCAN算法对9个进程进行调度及磁头移动的情况。

2.循环扫描（CSCAN)算法 SCAN算法既能获得较好的寻道性能，又能防止“饥饿”现象，故被广泛用于大、中、 218  第六章输入输出系统 小型机器和网络中的磁盘调度。但也存在这样的问题：当磁头刚从里向外移动而越过了某 一磁道时，恰好又有一进程请求访问此磁道，这时，该进程必须等待，待磁头继续从里向 外，然后再从外向里扫描完处于外面的所有要访问的磁道后，才处理该进程的请求，致使 该进程的请求被大大地推迟。为了减少这种延迟，CSCAN算法规定磁头单向移动，例如， 只是自里向外移动，当磁头移到最外的磁道并访问后，磁头立即返回到最里的欲访问磁道， 亦即将最小磁道号紧接着最大磁道号构成循环，进行循环扫描。采用循环扫描方式后，上 述请求进程的请求延迟将从原来的2T减为T+Smax，其中T为由里向外或由外向里单向扫 描完要访问的磁道所需的寻道时间，而Smax是将磁头从最外面被访问的磁道直接移到最里 及每次磁头移动的距离。 （从100#磁道开始，向磁道号 （从100#磁道开始，向磁道号 增加方向访问） 增加方向访问) 被访问的 移动距离 被访问的 移动距离 下一个磁道号 (磁道数) 下一个磁道号 (磁道数) 150 50 150 50 160 10 160 10 184 24 184 24 90 6 18 166 58 32 38 20 55 3 39 1 39 16 55 16 38 1 58 3 18 20 90 32 平均寻道长度：27.8 平均寻道长度：35.8 图6-32SCAN调度算法示例 图6-33CSCAN调度算法示例

3.NStepSCAN和FSCAN调度算法 1)）NStepSCAN算法 在SSTF、SCAN及CSCAN几种调度算法中，都可能出现磁臂停留在某处不动的情况， 例如，有一个或几个进程对某一磁道有较高的访问频率，即这个（些）进程反复请求对某一磁道 的IO操作，从而垄断了整个磁盘设备。我们把这一现象称为“磁臂粘着”（Armstickiness)。 在高密度磁盘上容易出现此情况。N步SCAN算法是将磁盘请求队列分成若干个长度为N 的子队列，磁盘调度将按FCFS算法依次处理这些子队列。而每处理一个队列时又是按 SCAN算法，对一个队列处理完后，再处理其他队列。当正在处理某子队列时，如果又出 现新的磁盘I/O请求，便将新请求进程放入其他队列，这样就可避免出现粘着现象。当N 值取得很大时，会使N步扫描法的性能接近于SCAN算法的性能；当N=1时，N步SCAN 算法便蜕化为FCFS算法。 2）FSCAN算法 FSCAN算法实质上是N步SCAN算法的简化，即FSCAN只将磁盘请求队列分成两个 219  计算机操作系统 子队列。一个是由当前所有请求磁盘IV/O的进程形成的队列，由磁盘调度按SCAN算法进 行处理。另一个是在扫描期间，将新出现的所有请求磁盘IVO的进程放入等待处理的请求 队列。这样，所有的新请求都将被推迟到下一次扫描时处理。

1.试说明I/O系统的基本功能。

2.简要说明IO软件的四个层次的基本功能。

3.I/O系统接口与软件/硬件（RW/HW)接口分别是什么接口？

4.与设备无关性的基本含义是什么？为什么要设置该层？

5.试说明设备控制器的组成。

6.为了实现CPU与设备控制器间的通信，设备控制器应具备哪些功能？

7.什么是内存映像I/O？它是如何实现的？

8.为什么说中断是OS赖以生存的基础？

9.对多中断源的两种处理方式分别用于何种场合？

10.设备中断处理程序通常需完成哪些工作？

11.简要说明中断处理程序对中断进行处理的几个步骤。

12.试说明设备驱动程序具有哪些特点。

13.设备驱动程序通常要完成哪些工作？

14.简要说明设备驱动程序的处理过程可分为哪几步。

15.试说明推动I/O控制发展的主要因素是什么。

16.有哪几种I/O控制方式？各适用于何种场合？

17.试说明DMA的工作流程。

18.为何要引入与设备的无关性？如何实现设备的独立性？

19.与设备的无关的软件中，包括了哪些公有操作的软件？

20.在考虑到设备的独立性时，应如何分配独占设备？

21.何谓设备虚拟？实现设备虚拟时所依赖的关键技术是什么？

22.在实现后台打印时，SPOOLing系统应为请求I/O的进程提供哪些服务？

23.假脱机系统向用户提供共享打印机的基本思想是什么？

24.引入缓冲的主要原因是什么？

25.在单缓冲情况下，为什么系统对一块数据的处理时间为max(C,T)+M?

26.为什么在双缓冲情况下，系统对一块数据的处理时间为max(T,C)？

27.试绘图说明把多缓冲用于输出时的情况。

28.试说明收容输入工作缓冲区和提取输出工作缓冲区的工作情况。

29.何谓安全分配方式和不安全分配方式？

30.磁盘访问时间由哪几部分组成？每部分时间应如何计算？

31.目前常用的磁盘调度算法有哪几种？每种算法优先考虑的问题是什么？ 220