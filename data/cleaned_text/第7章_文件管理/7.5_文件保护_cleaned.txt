第七章文件管理

2.如何利用符号链实现共享 为使链接父目录D5能共享文件F，可以由系统创建一个LINK类型的新文件，也取名 为F，并将F写入链接父目录D5中，以实现D5与文件F8的链接。在新文件F中只包含 被链接文件F8的路径名。这样的链接方法被称为符号链接。新文件F中的路径名则只被看 做是符号链。当用户通过D5访问被链接的文件F8，且正要读LINK类新文件时，此要求 将被OS截获，OS根据新文件中的路径名去找到文件F8，然后对它进行读（写)，这样就实 现了用户B对文件F的共享。

3.利用符号链实现共享的优点 在利用符号链方式实现文件共享时，只是文件主才拥有指向其索引结点的指针；而共 享该文件的其他用户则只有该文件的路径名，并不拥有指向其索引结点的指针。这样，也 就不会发生在文件主删除一共享文件后留下一悬空指针的情况。当文件的拥有者把一个共 享文件删除后，如果其他用户又试图通过符号链去访问一个已被删除的共享文件，则会因 系统找不到该文件而使访问失败，于是再将符号链删除，此时不会产生任何影响。 值得一提的是，在计算机网络中，Web浏览器在进行浏览时所使用的文件是HTML类 型的文件。在HTML文件中有着许多链接符，通过这些链接符能够链接（通过计算机网络） 世界上任何地方的机器中的文件。在利用符号链实现共享时，同样可以通过网络链接到分 布在世界各地的计算机系统中的文件。关于Web浏览器详见网络操作系统一章。

4.利用符号链的共享方式存在的问题 给定的文件路径名逐个分量（名）地去查找目录，直至找到该文件的索引结点。因此，在每 次访问共享文件时，都可能要多次地读盘。这使每次访问文件的开销甚大，且增加了启动 尽管该文件非常简单，却仍要为它配置一个索引结点，这也要耗费一定的磁盘空间。 上述两种链接方式都存在这样一个共同的问题，即每一个共享文件都有几个文件名。 换言之，每增加一条链接，就增加一个文件名。这在实质上就是每个用户都使用自己的路 径名去访问共享文件。当我们试图去遍历（traverse）整个文件系统时，将会多次遍历到该共 对一个共享文件产生多个拷贝。

7.5文件保护 在现代计算机系统中，存放了越来越多的宝贵信息供用户使用，给人们带来了极大的 好处和方便，但同时也有着潜在的不安全性。影响文件安全性的主要因素有：

（1）人为因素。人们有意或无意的行为，会使文件系统中的数据遭到破坏或丢失。

(2）系统因素。由于系统的某部分出现异常情况，而造成数据的破坏或丢失，特别是 作为数据存储主要介质的磁盘，一旦出现故障，会产生难以估量的影响。

(3）自然因素。随着时间的推移，存放在磁盘上的数据会逐渐消失。 243  计算机操作系统 为了确保文件系统的安全性，可针对上述原因而采取三方面的措施：

（1）通过存取控制机制，防止由人为因素所造成的文件不安全性。

(2）采取系统容错技术，防止系统部分的故障所造成的文件的不安全性。

（3）建立后备系统，防止由自然因素所造成的不安全性。 本节主要介绍第一方面的措施一—存取控制机制。在下一章再介绍第二和第三方面的 措施。

7.5.1保护域(ProtectionDomain) 护域”和“访问权”的概念。规定每一个进程仅能在保护域内执行操作，而且只允许进程 访问它们具有“访问权”的对象。

1.访问权 为了对系统中的对象加以保护，应由系统来控制进程对对象的访问。对象可以是硬件 对象，如磁盘驱动器、打印机；也可以是软件对象，如文件、程序。对对象所施加的操作 也有所不同，如对文件可以是读，也可以是写或执行操作。我们把一个进程能对某对象执 行操作的权力，称为访问权(Access right)。每个访问权可以用一个有序对(对象名，权集)来 表示，例如，某进程有对文件F执行读和写操作的权力，则可将该进程的访问权表示成（F1， {R/W})。

2.保护域 为了对系统中的资源进行保护而引入了保护域的概念，保护域简称为“域”。“域”是 进程对一组对象访问权的集合，进程只能在指定域内执行操作。这样，“域”也就规定了进 即文件F和F2，只允许进程对F读，而允许对F2读和写；而对象Printer1同时出现在域2 和域3中，这表示在这两个域中运行的进程都能使用打印机。 域1 域2 域3 F[RWE] F[R] Fs[R] 1[W] F4[RWE] Printer 1 Plotter 2[W] F2[R] Fs[RW] 图7-17三个保护域

3.进程和域间的静态联系 在进程和域之间可以一一对应，即一个进程只联系着一个域。这意味着，在进程的整 个生命期中，其可用资源是固定的，我们把这种域称为“静态域”。在这种情况下，进程运 行的全过程都是受限于同一个域，这将会使赋予进程的访问权超过了实际需要。例如，某 进程在运行开始时需要磁带机输入数据，而在进程快结束时，又需要用打印机打印数据。 在一个进程只联系着一个域的情况下，则需要在该域中同时设置磁带机和打印机这两个对 象，这将超过进程运行的实际需要。 244  第七章文件管理

4.进程和域间的动态联系方式 在进程和域之间，也可以是一对多的关系，即一个进程可以联系着多个域。在此情况 下，可将进程的运行分为若干个阶段，其每个阶段联系着一个域，这样便可根据运行的实 际需要来规定在进程运行的每个阶段中所能访问的对象。用上述的同一个例子，我们可以 把进程的运行分成三个阶段：进程在开始运行的阶段联系着域D1，其中包括用磁带机输入； 在运行快结束的第三阶段联系着域D3，其中是用打印机输出；中间运行阶段联系着域D2， 其中既不含磁带机，也不含打印机。我们把这种一对多的联系方式称为动态联系方式，在 采用这种方式的系统中，应增设保护域切换功能，以使进程能在不同的运行阶段从一个保 护域切换到另一个保护域。

7.5.2访问矩阵 一一

1.基本的访问矩阵 我们可以利用一个矩阵来描述系统的访问控制，并把该矩阵称为访问矩阵(AccesS Matrix)。访问矩阵中的行代表域，列代表对象，矩阵中的每一项是由一组访问权组成的。 因为对象已由列显式地定义，故可以只写出访问权而不必写出是对哪个对象的访问权，每 一项访问权access(i,j)定义了在域D;中执行的进程能对对象Q;所施加的操作集。 访问矩阵中的访问权通常是由资源的拥有者或者管理者所决定的。当用户创建一个新 文件时，创建者便是拥有者，系统在访问矩阵中为新文件增加一列，由用户决定在该列的 某个项中应具有哪些访问权，而在另一项中又具有哪些访问权。当用户删除此文件时，系 统也要相应地在访问矩阵中将该文件对应的列撤消。 图7-17的访问矩阵如图7-18所示。它是由三个域和8个对象所组成的。当进程在域 D中运行时，它能读文件Fi、读和写文件F2。进程在域D2中运行时，它能读文件F3、F4 和F5，以及写文件F4、Fs和执行文件F4，此外还可以使用打印机1。只有当进程在域D3 中运行时，才可使用绘图仪2。 对象 F F2 F3 F4 Fs F6 Printer 1 Plotter2 域 D R R, W D2 R R,W,E R, W W D3 R,W,E W 图7-18 一个访问矩阵

2.具有域切换权的访问矩阵 为了实现在进程和域之间的动态联系，应能够将进程从一个保护域切换到另一个保护 域。为了能对进程进行控制，同样应将切换作为一种权力，仅当进程有切换权时，才能进 行这种切换。为此，在访问矩阵中又增加了几个对象，分别把它们作为访问矩阵中的几个 域；当且仅当 switch∈access(i,j)时，才允许进程从域i切换到域j。例如，在图7-19 中， 由于域D,和D2所对应的项目中有一个S即Switch，故而允许在域D,中的进程切换到域 D2中。类似地，在域D2和对象D3所对应的项中，也有Switch，这表示在D2域中运行的 245  计算机操作系统 进程可以切换到域D中，但不允许该进程再从域D返回到域D1。 对象 F4 F6 Printer 1 Plotter 2 域D F3 域D2 域D3 域 域D R,W S P 域D2 R R,W,ER,W W S 域D R,W,E W W 图7-19具有切换权的访问控制矩阵

7.5.3访问矩阵的修改 在系统中建立起访问矩阵后，随着系统的发展及用户的增加和改变，必然要经常对访 问矩阵进行修改。因此，应当允许可控性地修改访问矩阵中的内容，这可通过在访问权中 增加拷贝权、拥有权及控制权的方法来实现有控制的修改。

1.拷贝权(CopyRight) 我们可利用拷贝权将在某个域中所拥有的访问权(access(i,j))扩展到同一列的其它域 中，亦即，为进程在其它的域中也赋予对同一对象的访问权(access(k,j))，如图7-20 所示。 对象 对象 F F2 F3 F F3 域 域 D E w* D W* D2 E R' E D2 E R E D3 E D3 E W P (a) (b) 图7-20具有拷贝权的访问控制矩阵 在图7-20中，凡是在访问权（access(i，j))上加星号（*）者，都表示在i域中运行的进程 能将其对对象j的访问权复制成在任何域中对同一对象的访问权。例如，图中在域D2中对 文件F2的读访问权上加有*号时，表示运行在D2域中的进程可以将其对文件F2的读访问 权扩展到域D3中去。又如，在域D中对文件F的写访问权上加有*号时，使运行在域D 中的进程可以将其对文件F的写访问权扩展到域D中去，使在域D中运行的进程也具有 对文件F的写访问权。 应注意的是，把带有*号的拷贝权如R*，由 access(i,j)拷贝成access(k,j)后，其所建立 的访问权只是R而不是R*，这使在域Dk上运行的进程不能再将其拷贝权进行扩散，从而 限制了访问权的进一步扩散。这种拷贝方式被称为限制拷贝。

2.所有权（OwnerRight） 人们不仅要求能将已有的访问权进行有控制的扩散，而且同样需要能增加某种访问权，或 者能删除某种访问权。此时，可利用所有权(O)来实现这些操作。见图7-21，如果在access(i,j) 246  第七章文件管理 换言之，进程可以增加或删除在任何其它域中运行的进程对对象」的访问权。例如，在图 7-21(a)中，在域D中运行的进程(用户)是文件F的所有者，它能增加或删除在其它域中的 运行进程对文件F的访问权；类似地，在域D2中运行的进程（用户)是文件F2和文件F3的 拥有者，该进程可以增加或删除在其它域中运行的进程对这两个文件的访问权。在图8-21(b) 中示出了在域D中运行的进程删除了在域D中运行的进程对文件F的执行权；在域D2 中运行的进程增加了在域D中运行的进程对文件F2和F的写访问权。 对象 对象 F F2 F F F2 F3 域 域 D O,E W D O,E R',0 R',O,W D2 O,R',W R',O,W D2 D D E W W (a) (b) 图7-21带所有权的访问矩阵

3.控制权（ControlRight) 拷贝权和所有权都是用于改变矩阵内同一列的各项访问权的，或者说，是用于改变在 不同域中运行的进程对同一对象的访问权的。控制权则可用于改变矩阵内同一行中（域中） 的各项访问权，亦即，用于改变在某个域中运行的进程对不同对象的访问权的。如果在 access(i，j)中包含了控制权，则在域D中运行的进程可以删除在域D中运行的进程对各对 象的任何访问权。例如在图7-22中，在access（D2，D3)中包括了控制权，则一个在域D2中 运行的进程能够改变对域D内各项的访问权。比较图7-19和图7-22可以看出，在D3中已 无对文件F和Plotter2的写访问权。 对象 F2 F6 F1 Fs Printer 1 Plotter2 域D 域D2 域D3 域 域D R,W R 域D2 R,W,ER,W W Control R 域D R,E W W 图7-22具有控制权的访问矩阵

7.5.4访问矩阵的实现 虽然访问矩阵在概念上是简单的，因而极易理解，但在具体实现上却有一定的困难， 这是因为，在稍具规模的系统中，域的数量和对象的数量都可能很大，例如，在系统中有 100个域，10个对象，此时在访问矩阵中便会有10°个表项，即使每个表项只占一个字节， 此时也需占用100MB的存储空间来保存这个访问矩阵。而要对这个矩阵（表）进行访问，则 必然是十分费时的。简言之，访问该矩阵所花费的时空开销是令人难以接受的。 事实上，每个用户(进程)所需访问的对象通常都很有限，例如只有几十个，因而在这 个访问矩阵中的绝大多数项都会是空项。或者说，这是一个非常稀疏的矩阵。目前的实现 247  计算机操作系统 方法，是将访问矩阵按列划分，或者按行划分，以分别形成访问控制表或访问权力表。

1.访问控制表(AccessControl List) 这是指对访问矩阵按列(对象)划分，为每一列建立一张访问控制表ACL。在该表中， 已把矩阵中属于该列的所有空项删除，此时的访问控制表是由一有序对（域，权集）所组成 的。由于在大多数情况下，矩阵中的空项远多于非空项，因而使用访问控制表可以显著地 减少所占用的存储空间，并能提高查找速度。在不少系统中，当对象是文件时，便把访问 控制表存放在该文件的文件控制表中，或放在文件的索引结点中，作为该文件的存取控制 信息。 域是一个抽象的概念，可用各种方式实现。最常见的一种情况是每一个用户是一个域， 而对象则是文件。此时，用户能够访问的文件集和访问权限取决于用户的身份。通常，在 一个用户退出而另一个用户进入时，即用户发生改变时，要进行域的切换；另一种情况是， 每个进程是一个域，此时，能够访问的对象集中的各访问权取决于进程的身份。 访问控制表也可用于定义缺省的访问权集，即在该表中列出了各个域对某对象的缺省 访问权集。在系统中配置了这种表后，当某用户（进程)要访问某资源时，通常是首先由系 统到缺省的访问控制表中，去查找该用户（进程）是否具有对指定资源进行访问的权力。如 果找不到，再到相应对象的访问控制表中去查找。

2.访问权限（Capabilities）表 如果把访问矩阵按行（即域）划分，便可由每一行构成一张访问权限表。换言之，这是 由一个域对每一个对象可以执行的一组操作所构成的表。表中的每一项即为该域对某对象 的访问权限。当域为用户（进程）、对象为文件时，访问权限表便可用来描述一个用户（进程) 对每一个文件所能执行的一组操作。 图7-23示出了对应于图7-19中域D2的访问权限表。在表中共有三个字段。其中类型 字段用于说明对象的类型；权力字段是指域D2对该对象所拥有的访问权限；对象字段是一 个指向相应对象的指针，对UNIX系统来说，它就是索引结点的编号。由该表可以看出， 域D2可以访问的对象有4个，即文件3、4、5和打印机，对文件3的访问权限是只读；对 文件4的访问权限是读、写和执行等。 类型 权力 对象 0 文件 R-- 指向文件3的指针 RWE 1 文件 指向文件4的指针 2 文件 RW- 指向文件5的指针 3 打印机 -W- 指向打印机1的指针 图7-23访问权限表 应当指出，仅当访问权限表安全时，由它所保护的对象才可能是安全的。因此，访问 权限表不能允许直接被用户(进程)所访问。通常，将访问权限表存储到系统区内的一个专用 区中，只有通过访问合法性检查的程序才能对该表进行访问，以实现对访问控制表的保护。 目前，大多数系统都同时采用访问控制表和访问权限表，在系统中为每个对象配置一 张访问控制表。当一个进程第一次试图去访问一个对象时，必须先检查访问控制表，检查 248  第七章文件管理 进程是否具有对该对象的访问权。如果无权访问，便由系统来拒绝进程的访问，并构成一 例外(异常)事件；否则(有权访问），便允许进程对该对象进行访问，并为该进程建立一访问 权限，将之连接到该进程。以后，该进程便可直接利用这一返回的权限去访问该对象，这 样，便可快速地验证其访问的合法性。当进程不再需要对该对象进行访问时，便可撤消该 访问权限。

1.何谓数据项、记录和文件？

2.文件系统的模型可分为三层，试说明其每一层所包含的基本内容。

3.与文件系统有关的软件可分为哪几个层次？

4.试说明用户可以对文件施加的主要操作有哪些。

5.为什么在大多数OS中都引入了“打开”这一文件系统调用？打开的含意是什么？

6.何谓文件的逻辑结构？何谓文件的物理结构？

7.按文件的组织方式可将文件分为哪几种类型？

8.如何提高对变长记录顺序文件的检索速度？

9.通过哪两种方式来对固定长记录实现随机访问？

10.可以采取什么方法来实现对变长记录文件进行随机检索？

11.试说明索引顺序文件的几个主要特征。

12.试说明对索引文件和索引顺序文件的检索方法。

13.试从检索速度和存储费用两方面来比较两级索引文件和索引顺序文件。

14.对目录管理的主要要求是什么？

15.采用单级目录能否满足对目录管理的主要要求？为什么？

16.目前广泛采用的目录结构形式是哪种？它有什么优点？

17.何谓路径名和当前目录？

18.Hash检索法有何优点？又有何局限性？

19.在Hash检索法中，如何解决“冲突”问题？

20.试说明在树形目录结构中线性检索法的检索过程，并给出相应的流程图。

21.基于索引结点的文件共享方式有何优点？

22.什么是主父目录和链接父目录？如何利用符号链实现共享？

23.基于符号链的文件共享方式有何优点？

24.什么是保护域？进程与保护域之间存在着的动态联系是什么？

25.试举例说明具有域切换权的访问控制矩阵。

26.如何利用拷贝权来扩散某种访问权？

27.如何利用拥有权来增、删某种访问权?

28.增加控制权的主要目的是什么？试举例说明控制权的应用。

29.什么是访问控制表？什么是访问权限表？

30.系统如何利用访问控制表和访问权限表来实现对文件的保护？ 249