

--- Page 237 ---
计算机操作系统
者以及对文件的访问权等）。另一类是有关目录的操作，如创建一个目录，删除一个目录，
改变当前目录和工作目录等。此外，还有用于实现文件共享的系统调用，以及用于对文件
系统进行操作的系统调用等。
/7.2
2文件的逻辑结构
用户所看到的文件称为逻辑文件，它是由一系列的逻辑记录组成的。从用户的观点而
言，文件的逻辑记录是能够被存取的基本单位。在进行文件系统高层设计时，所涉及的主
要问题是文件的逻辑结构，即如何将这些逻辑记录构成一个逻辑文件。在进行文件系统低
层设计时，所涉及的主要问题是文件的物理结构，即如何将一个文件存储在外存上。由此
可见，在系统中的所有文件都存在着以下两种形式的文件结构：
(1）文件的逻辑结构（FileLogicalStructure)。这是从用户观点出发所观察到的文件组织
形式，即文件是由一系列的逻辑记录组成的，是用户可以直接处理的数据及其结构，它独
立于文件的物理特性，又称为文件组织(FileOrganization)。
(2）文件的物理结构，又称为文件的存储结构。这是指系统将文件存储在外存上所形
成的一种存储组织形式，是用户不能看见的。文件的物理结构不仅与存储介质的存储性能
有关，而且与所采用的外存分配方式有关。无论是文件的逻辑结构，还是其物理结构，都
会影响对文件的检索速度。
7.2.1文件逻辑结构的类型
对文件逻辑结构所提出的基本要求，首先是有助于提高对文件的检索速度，即在将大
批记录组成文件时，应采用一种有利于提高检索记录速度和效率的逻辑结构形式。其次是
该结构应方便对文件进行修改，即便于在文件中增加、删除和修改一个或多个记录。第三
是降低文件存放在外存上的存储费用，即尽量减少文件占用的存储空间，不要求大片的连
续存储空间。
文件的逻辑结构从是否有结构来分，可分为两大类：一类是有结构文件，这是指由一
个以上的记录构成的文件，故又把它称为记录式文件；另一类是无结构文件，这是指由字
符流构成的文件，敌又称为流式文件。从文件的组织方式来分，可以分为顺序文件、索引
文件和索引顺序文件几种。
1.按文件是否有结构分类
1）有结构文件
在记录式文件中，每个记录都用于描述实体集中的一个实体，各记录有着相同或不同
数目的数据项。记录的长度可分为定长和不定长两类。
(1）定长记录，是指文件中所有记录的长度都是相同的，所有记录中的各数据项都处
在记录中相同的位置，具有相同的顺序和长度，文件的长度用记录数目表示。定长记录能
有效地提高检索记录的速度和效率，能方便对文件进行处理和修改，所以这是目前较常用
的一种记录格式，被广泛用于数据处理中。
(2）变长记录，是指文件中各记录的长度不相同。产生变长记录的原因可能是由于一
226

--- Page 238 ---
第七章文件管理
个记录中所包含的数据项数目并不相同，如书的著作者、论文中的关键词等，也可能是数
据项本身的长度不定，例如，病历记录中的病因、病史，科技情报记录中的摘要等。不论
是哪一种，在处理前，每个记录的长度都是可知的。对变长记录的检索速度慢，也不便于
对文件进行处理和修改。但由于变长记录很适合于某些场合的需要，所以也是目前较常用
的一种记录格式，被广泛用于许多商业领域。
2）无结构文件
文件是由定长或变长记录构成的），那么在系统中运行的大量的源程序、可执行文件、库函
数等，所采用的就是无结构的文件形式，即流式文件。其文件的长度是以字节为单位的。
对流式文件的访问，则是利用读、写指针来指出下一个要访问的字符。可以把流式文件看
做是记录式文件的一个特例：一个记录仅有一个字节。
2.按文件的组织方式分类
根据文件的组织方式，可把有结构文件分为三类：
(1）顺序文件，指由一系列记录按某种顺序排列所形成的文件，其中的记录可以是定
长记录或可变长记录。
(2）索引文件，指为可变长记录文件建立一张索引表，为每个记录设置一个表项，以
加速对记录的检索速度。
(3）索引顺序文件，这是顺序文件和索引文件相结合的产物，这里，在为每个文件建
录建立一个索引表项。
7.2.2顺序文件（SequentialFile）
一
文件的逻辑结构中记录的组织方式来源于用户和系统在管理上的目标和需求。不同的
目标和需求产生了多种组织方式，从而形成了多种逻辑结构的文件。其中最基本也是最常
见的是顺序文件。
1.顺序文件的排列方式
在顺序文件中的记录，可以按照各种不同的顺序进行排列。一般地，可分为两种情况：
(1）串结构。在串结构文件中的记录，通常是按存入时间的先后进行排序的，各记录之间
的顺序与关键字无关。在对串结构文件进行检索时，每次都必须从头开始，逐个记录地查找，
直到找到指定的记录或查完所有的记录为止。显然，对串结构文件进行检索是比较费时的。
(2）顺序结构。由用户指定一个字段作为关键字，它可以是任意类型的变量，其中最
简单的是正整数，如0到N－1。为了能唯一地标识每一个记录，必须使每个记录的关键字
值在文件中具有唯一性。这样，文件中的所有记录就可以按关键字来排序，可以按关键字
的大小进行排序，或按其英文字母顺序排序。在对顺序结构文件进行检索时，还可以利用
某种有效的查找算法，如折半查找法、插值查找法、跳步查找法等方法提高检索效率。故
顺序结构文件可有更高的检索速度和效率。
2.顺序文件的优缺点
顺序文件的最佳应用场合是在对文件中的记录进行批量存取时（即每次要读或写一大
227

--- Page 239 ---
计算机操作系统
批记录）。所有逻辑文件中顺序文件的存取效率是最高的。此外，对于顺序存储设备（如磁
带)，也只有顺序文件才能被存储并能有效地工作。
在交互应用的场合，如果用户(程序)要求查找或修改单个记录，系统需要在文件的记
录中逐个地查找，此时，顺序文件所表现出来的性能就可能很差。尤其是当文件较大时，
情况更为严重。例如，对于一个含有10*个记录的顺序文件，如果采用顺序查找法，查找
到一个指定的记录，平均需要查找5x10”次。如果顺序文件中是可变长记录，则需付出的
开销将更大，因此也限制了顺序文件的长度。
顺序文件的另一个缺点是，如果想增加或删除一个记录都比较困难。为了解决这一问
题，可以为顺序文件配置一个运行记录文件（LogFile）或称为事务文件（TransactionFile)，把
试图增加、删除或修改的信息记录于其中，规定每隔一定时间（例如4小时），将运行记录
文件与原来的主文件加以合并，产生一个按关键字排序的新文件。
7.2.3记录寻址
为了访问顺序文件中的一条记录，首先应找到该记录的地址。查找记录地址的方法有
隐式寻址和显式寻址方式两种。
1.隐式寻址方式
对于定长记录的顺序文件，如果已知当前记录的逻辑地址，便很容易确定下一个记录
的逻辑地址。在读一个文件时，为了读文件，在系统中应设置一个读指针Rptr（见图7-3)，
指向下一个记录的首地址，其中的L为记录长度。类似地，为了写文件，也应设置一个写
指针Wpt，使之指向要写的记录的首地址。同样，在每写完一个记录时，又须执行操作：
Wptr=Wptr+ L。
0
Lo
}L
Ro
ILo.-
L
Ro
R
L
Lo+1
2L
L
R2
L
3L
R
R
}L
L+L,+2
4L
(L+1)
Wptr-
Rptr
iL
Li
IL
R;
R;
(i+1)L
3
L
(L+1)
k=0
：
(a)定长记录文件
(b)变长记录文件
图7-3定长和变长记录文件
对于变长记录的顺序文件，与顺序读或写时的情况相似，只是每次都需要从正在读（写）
的记录中读出该记录的长度。同样需要分别为它们设置读或写指针，但在每次读或写完一
个记录后，须将读或写指针加上L，L是刚读或刚写完的记录的长度。这种顺序访问的方
228

--- Page 240 ---
第七章文件管理
式可用于所有文件类型，其主要问题是，访问一个指定记录i，必须扫描或读取前面第0～
i-1个记录，访问速度是比较慢的。
2.显式寻址方式
该方式可用于对定长记录的文件实现直接或随机访问。因为任何记录的位置都很容易
通过记录长度计算出来。而对于可变长度记录的文件则不能利用显式寻址方式实现直接或
随机访问，必须增加适当的支持机构方能实现。下面我们通过两种方式对定长记录实现随
机访问：
（1）通过文件中记录的位置。此时，在文件中的每一个记录，可用从0到N-1的整数
录，可直接根据下式计算，获得第i个记录相对于第一个记录首址的地址：A=ixL。由于
获得任何记录地址的时间都非常短，故可利用这种方法对定长记录实现随机访问。
然而，对于可变长度记录则不能利用显式寻址方式，对一个文件实现随机访问，因为
要查找其中的第i个记录时须首先计算出该记录的首地址，为此，须顺序地查找每个记录，
从中获得相应记录的长度L，然后才能按下式计算出第i个记录的首址。假定在每个记录
前用一个字节指明该记录的长度，则
仁
A=
ZL; +1
i=0
可见，用直接存取方法来访问变长记录文件中的一个记录是十分低效的，其检索时间也很
难令人接受，因此不能利用这种方法对可变长记录实现随机访问。
（2）利用关键字。此时用户必须指定一个字段作为关键字，通过指定的关键字来查找
始，与每一个记录的关键字进行比较，直到找到匹配的记录。
值得一提的是，可变长度的、基于关键字的记录在商业领域很重要，用得也很多，但
因为在专门的数据库系统中，已经实现了对它们的支持，并能从不同的角度来管理组织和
显示数据，所以只有一些现代OS的文件系统对它们提供了支持。不过文件目录是个例外，
对目录的检索是基于利用关键字来进行检索的。其中关键字是符号文件名，我们将在7.3
节目录管理中介绍。
7.2.4索引文件（IndexFile)
→
1.按关键字建立索引
定长记录的文件可以通过简单的计算，很容易地实现随机查找。但变长记录文件查找
一个记录必须从第一个记录查起，一直顺序查找到目标记录为止，耗时很长。如果我们为
变长记录文件建立一张索引表，为主文件中的每个记录在索引表中分别设置一个表项，记
录指向记录的指针（即记录在逻辑地址空间的首址）以及记录的长度L，索引表按关键字排
序，因此其本身也是一个定长记录的顺序文件，这样就把对变长记录顺序文件的顺序检索
转变为对定长记录索引文件的随机检索，从而加快对记录检索的速度，实现直接存取。图
7-4示出了索引文件的组织形式。
229

--- Page 241 ---
计算机操作系统
完全索引完全索引部分索引
索引号长度m指针ptr
Ro
0
mo
R
m
.·.
R;
i
u
...
逻辑文件
原始文件
索引表
（长度可变的记录）
(a)具有单个索引表的索引文件
(b)具有多个索引表的索引文件
图7-4具有单个和多个索引表的索引文件
由于是按关键字建立的索引，所以在对索引文件进行检索时，可以根据用户（程序）提
供的关键字利用折半查找法去检索索引表，从中找到相应的表项。再利用该表项中给出的
指向记录的指针值去访问所需的记录。而每当要向索引文件中增加一个新记录时，便须对
索引表进行修改。由于索引文件可有较快的检索速度，敌它主要用于对信息处理的及时性
要求较高的场合。
2.具有多个索引表的索引文件
使用按关键字建立索引表的索引文件与顺序文件一样，都只能按该关键字进行检索。
而实际应用情况往往是：不同的用户，为了不同的目的，希望能按不同的属性（或不同的关
键字）来检索一条记录。为实现此要求，需要为顺序文件建立多个索引表，即为每一种可能
成为检索条件的域（属性或关键字）都配置一张索引表。在每一个索引表中，都按相应的一
种属性或关键字进行排序。例如，有一个图书文件，为每一本书建立了一个记录，此时可
所用的关键字是书名，第三个索引表所用的关键字是作者姓名，第四个索引表所用的关键
字是出版时间等。这样用户也就可以根据自己的需要，用不同的关键字来进行检索。
索引文件的主要优点是，它将一个需要顺序查找的文件改造成一个可随机查找的文件，
极大地提高了对文件的查找速度。同时，利用索引文件插入和删除记录也非常方便，故索
引文件已成为当今应用最为广泛的一种文件形式。只是它除了有主文件外，还须配置一张
索引表，而且每个记录都要有一个索引项，因此增加了存储开销。
7.2.5索引[顺序文件（IndexSequentialFile）
一一
1.索引顺序文件的特征
索引顺序文件是对顺序文件的一种改进，它基本上克服了变长记录的顺序文件不能随
机访问，以及不便于记录的删除和插入的缺点。但它仍保留了顺序文件的关键特征，即记
录是按关键字的顺序组织起来的。它又增加了两个新特征：一个是引入了文件索引表，通
过该表可以实现对索引l顺序文件的随机访问；另一个是增加了溢出(overflow)文件，用它来
记录新增加的、删除的和修改的记录。可见，索引顺序文件是顺序文件和索引文件相结合
的产物，能有效地克服变长记录文件的缺点，而且所付出的代价也不算太大。
230

--- Page 242 ---
第七章文件管理
2.一级索引顺序文件
最简单的索引顺序文件只使用了一级索引。其具体的建立方法是，首先将变长记录顺
向该记录的指针。索引1顺序文件是最常见的一种逻辑文件形式，如图7-5所示。
键」逻辑地址
姓名
其它属性
m
An Qi
Bao Rong
mI
An Kang
Chen Lin
Bao Rong
逻辑文件
图7-5索引顺序文件
在对索引顺序文件进行检索时，首先也是利用用户（程序）所提供的关键字以及某种查
找算法去检索索引表，找到该记录所在记录组中第一个记录的表项，从中得到该记录组第一
个记录在主文件中的位置。然后，再利用顺序查找法去查找主文件，从中找到所要求的记录。
如果在一个顺序文件中所含有的记录数为N，则为检索到具有指定关键字的记录，平
均须查找N/2个记录。但对于索引顺序文件，则为能检索到具有指定关键字的记录，平均
只要查找√N个记录数，因而其检索效率S比顺序文件约提高√N/2倍。例如，有一个顺
序文件含有10000个记录，平均须查找的记录数为5000个。但对于索引顺序文件，则平均
只须查找100个记录。可见，它的检索效率是顺序文件的50倍。
3.两级索引顺序文件
对于一个非常大的文件，为找到一个记录而须查找的记录数目仍然很多，例如，对于
查找1000个记录。为了进一步提高检索效率，可以为顺序文件建立多级索引，即为索引文
件再建立一张索引表，从而形成两级索引表。例如，对于一个含有10°个记录的顺序文件，
可先为该文件建立一张低级索引表，每100个记录为一组，故低级索引表应含有104个表
后再为低级索引表建立一张高级索引表。这时，也同样是每100个索引表项为一组，故具
有10²个表项。这里的每个表项中存放的是低级索引表每组第一个表项中的关键字，以及
指向该表项的指针。此时，为找到一个具有指定关键字的记录，所需查找的记录数平均为
50+50+50=150，或者可表示为（3/2)/N。其中，N是顺序文件中记录的个数。注意，
在未建立索引文件时，所需查找的记录数平均为50万个，而对于建立了一级索引的顺序索
引文件，平均需查找1000次，建立两级索引的顺序索引文件，平均只需查找150次。
7.2.6直接文件和哈希文件
一一←
1.直接文件
采用前述几种文件结构对记录进行存取时，都须利用给定的记录键值，先对线性表或
231

--- Page 243 ---
计算机操作系统
链表进行检索，以找到指定记录的物理地址。然而对于直接文件，则可根据给定的关键字
直接获得指定记录的物理地址。换而言之，关键字本身就决定了记录的物理地址。这种由
关键字到记录物理地址的转换被称为键值转换(Keytoaddress transformation)。组织直接文
件的关键在于用什么方法进行从记录值到物理地址的转换。
2.哈希（Hash)文件
这是目前应用最为广泛的一种直接文件。它利用Hash函数（或称散列函数）可将关键字
转换为相应记录的地址。但为了能实现文件存储空间的动态分配，通常由Hash函数所求得
的并非是相应记录的地址，而是指向某一目录表相应表目的指针，该表目的内容指向相应
记录所在的物理块，如图7-6所示。例如，若令K为记录键值，用A作为通过Hash函数
H的转换所形成的该记录在目录表中对应表目的位置，则有关系A=H(K)。通常，把Hash
函数作为标准函数存于系统中，供存取文件时调用。
目录表
Hash函数
键值
图7-6Hash文件的逻辑结构
7.3文件自录
通常，在现代计算机系统中，都要存储大量的文件。为了能对这些文件实施有效的管
理，必须对它们加以妥善组织，这主要是通过文件目录实现的。文件目录也是一种数据结
构，用于标识系统中的文件及其物理地址，供检索时使用。对目录管理的要求如下：
（1）实现“按名存取”。用户只须向系统提供所需访问文件的名字，便能快速准确地找
到指定文件在外存上的存储位置。这是目录管理中最基本的功能，也是文件系统向用户提
供的最基本的服务。
(2）提高对目录的检索速度。通过合理地组织目录结构加快对目录的检索速度，从而
提高对文件的存取速度。这是在设计一个大、中型文件系统时所追求的主要目标。
(3）文件共享。在多用户系统中，应允许多个用户共享一个文件。这样就只须在外存
中保留一份该文件的副本供不同用户使用，以节省大量的存储空间，并方便用户和提高文
件利用率。
(4）允许文件重名。系统应允许不同用户对不同文件采用相同的名字，以便于用户按
照自己的习惯给文件命名和使用文件。
232