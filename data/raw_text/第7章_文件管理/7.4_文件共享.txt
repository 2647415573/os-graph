

--- Page 251 ---
计算机操作系统
录，因此，系统还是需要利用线性查找法查找目录。
在进行文件名的转换时，有可能把n个不同的文件名转换为相同的Hash值，即出现了
所谓的“冲突”。一种处理此“冲突”的有效规则是：
(1）在利用Hash法索引查找目录时，如果目录表中相应的目录项是空的，则表示系统
中并无指定文件。
（2）如果目录项中的文件名与指定文件名相匹配，则表示该目录项正是所要寻找的文
件所对应的目录项，故而可从中找到该文件所在的物理地址。
（3）如果在目录表的相应目录项中的文件名与指定文件名并不匹配，则表示发生了“冲
突”，此时须将其Hash值再加上一个常数（该常数应与目录的长度值互质)，形成新的索引
值，再返回到第一步重新开始查找。
7.4文件共享
在现代计算机系统中，必须提供文件共享手段，即指系统应允许多个用户（进程）共享
同一份文件。这样，在系统中只需保留该共享文件的一份副本。如果系统不能提供文件共
享功能，就意味着凡是需要该文件的用户，都须各自备有此文件的副本，显然这会造成对
存储空间的极大浪费。随着计算机技术的发展，文件共享的范围也在不断扩大，从单机系
统中的共享，扩展为多机系统的共享，进而又扩展为计算机网络范围的共享，甚至实现全
世界的文件共享。
早在20世纪的60和70年代，已经出现了不少实现文件共享的方法，如绕弯路法、连
访法，以及利用基本文件实现文件共享的方法：而现代的一些文件共享方法，也是在早期
这些方法的基础上发展起来的。下面我们仅介绍当前常用的两种文件共享方法，它们是在
树形结构目录的基础上经适当修改形成的，
7.4.1基于有向无循环图实现文件共享
1.有向无循环图DAG（DirectedAcyclicGraph）
在严格的树形结构目录中，每个文件只允许有一个父目录，父目录可以有效地拥有该
文件，其它用户要想访问它，必须经过其属主目录来访问该文件。这就是说，对文件的共
享是不对称的，或者说，树形结构目录是不适合文件共享的。如果允许一个文件可以有多
个父目录，即有多个属于不同用户的多个目录，同时指向同一个文件，这样虽会破坏树的
特性，但这些用户可用对称的方式实现文件共享，而不必再通过其属主目录来访问。
图7-13示出了一个有向无循环图，它允许每一个文件都可以有多个父目录。如图中的
目录D6有两个父目录D2和D1。
由上所述得知，当有多个用户要共享一个子目录或文件时，必须将共享文件或子目录
链接到多个用户的父目录中，才能方便地找到该文件。现在的问题是，如何建立父目录D5
与共享文件F8之间的链接呢？如果在文件目录中所包含的是文件的物理地址，即文件所在
盘块的盘块号，则在链接时，必须将文件的物理地址拷贝到D5目录中去。但如果以后D5
240

--- Page 252 ---
第七章文件管理
或D6还要继续向该文件中添加新内容，也必然要相应地再增加新的盘块，这些是由附加
操作Append来完成的。而这些新增加的盘块也只会出现在执行了操作的目录中。可见，
这种变化对其他用户而言，是不可见的，因而新增加的这部分内容已不能被共享。
根
Diazb
D2
D3cnap
4nmk
D5hkPD6ef
04
F1F2F3
D
F9
F4
F6
F7
F8
F10F11
图7-13有向无循环图目录层次
2.利用索引结点
为了解决这个问题，可以引用索引结点，即
Wang用户文件目录
诸如文件的物理地址及其它的文件属性等信息，
不再是放在目录项中，而是放在索引结点中。在
Testr
索引结点
文件目录中只设置文件名及指向相应索引结点
的指针，如图7-14所示。图中的用户Wang和
count=2
（
文件物理地址
Lee用户文件目录
Test
Lee的文件目录中，都设置有指向共享文件的索
引结点指针。此时，由任何用户对共享文件所进
Testr
行的Append操作或修改，都将引起其相应结点
内容的改变（例如，增加了新的盘块号和文件长
度等），这些改变是其他用户可见的，从而也就
图7-14基于索引结点的共享方式
能提供给其他用户来共享。
在索引结点中还应有一个链接计数count，用于表示链接到本索引结点（亦即文件）上的
用户目录项的数目。当count=3时，表示有三个用户目录项连接到本文件上，或者说是有
三个用户共享此文件。
当用户C创建一个新文件时，他便是该文件的所有者，此时将count置1。当有用户B
要共享此文件时，在用户B的目录中增加一目录项，并设置一指针指向该文件的索引结点，
此时，文件主仍然是C，count=2。如果用户C不再需要此文件，是否能将此文件删除呢？回
答是否定的。因为，若删除了该文件，也必然删除了该文件的索引结点，这样便会使B的
指针悬空，而B则可能正在此文件上执行写操作，此时将因此半途而废。但如果C不删除
此文件而等待B继续使用，这样，由于文件主是C，如果系统要记账收费，则C必须为B
使用此共享文件而付账，直至B不再需要。图7-15示出了B链接到文件前后的情况。
241

--- Page 253 ---
计算机操作系统
B的目录
C的目录
B的目录
owner=c
owner=c
owner=c
count=1
count=2
count=1
链接前
建立链接后
拥有者删除文件后
图7-15进程B链接前后的情况
7.4.2利用符号链接实现文件共享
1.利用符号链接（SymbolicLinking)的基本思想
利用符号链接实现文件共享的基本思想，是允许一个文件或子目录有多个父目录，但
其中仅有一个作为主(属主)父目录，其它的几个父目录都是通过符号链接方式与之相链接
的(简称链接父目录)。图7-16及图7-13基本相同，差别仅在于将原图中的某些实线改为虚
另外两条都已成为虚线。这表示F8仍然有三个父目录，但只有D6才是其主父目录，而
D5和D3都是链接父目录。类似地，D6的主父目录是D2，D1是链接父目录。这样做的最
大好处是，属主结构(用实线连接起来的结构)仍然是简单树，这对文件的删除、查找等都
更为方便。
根
D1azb
cnap
D3
D2
Q
F1
F2F3
D4nmk
DshkPD6
F9
D7
F4
b
F5
F6
F7
F8
F10F11
图7-16使用符号链接的目录层次
242

--- Page 254 ---
第七章文件管理
2.如何利用符号链实现共享
为使链接父目录D5能共享文件F，可以由系统创建一个LINK类型的新文件，也取名
为F，并将F写入链接父目录D5中，以实现D5与文件F8的链接。在新文件F中只包含
被链接文件F8的路径名。这样的链接方法被称为符号链接。新文件F中的路径名则只被看
做是符号链。当用户通过D5访问被链接的文件F8，且正要读LINK类新文件时，此要求
将被OS截获，OS根据新文件中的路径名去找到文件F8，然后对它进行读（写)，这样就实
现了用户B对文件F的共享。
3.利用符号链实现共享的优点
在利用符号链方式实现文件共享时，只是文件主才拥有指向其索引结点的指针；而共
享该文件的其他用户则只有该文件的路径名，并不拥有指向其索引结点的指针。这样，也
就不会发生在文件主删除一共享文件后留下一悬空指针的情况。当文件的拥有者把一个共
享文件删除后，如果其他用户又试图通过符号链去访问一个已被删除的共享文件，则会因
系统找不到该文件而使访问失败，于是再将符号链删除，此时不会产生任何影响。
值得一提的是，在计算机网络中，Web浏览器在进行浏览时所使用的文件是HTML类
型的文件。在HTML文件中有着许多链接符，通过这些链接符能够链接（通过计算机网络）
世界上任何地方的机器中的文件。在利用符号链实现共享时，同样可以通过网络链接到分
布在世界各地的计算机系统中的文件。关于Web浏览器详见网络操作系统一章。
4.利用符号链的共享方式存在的问题
给定的文件路径名逐个分量（名）地去查找目录，直至找到该文件的索引结点。因此，在每
次访问共享文件时，都可能要多次地读盘。这使每次访问文件的开销甚大，且增加了启动
尽管该文件非常简单，却仍要为它配置一个索引结点，这也要耗费一定的磁盘空间。
上述两种链接方式都存在这样一个共同的问题，即每一个共享文件都有几个文件名。
换言之，每增加一条链接，就增加一个文件名。这在实质上就是每个用户都使用自己的路
径名去访问共享文件。当我们试图去遍历（traverse）整个文件系统时，将会多次遍历到该共
对一个共享文件产生多个拷贝。
7.5文件保护
在现代计算机系统中，存放了越来越多的宝贵信息供用户使用，给人们带来了极大的
好处和方便，但同时也有着潜在的不安全性。影响文件安全性的主要因素有：
（1）人为因素。人们有意或无意的行为，会使文件系统中的数据遭到破坏或丢失。
(2）系统因素。由于系统的某部分出现异常情况，而造成数据的破坏或丢失，特别是
作为数据存储主要介质的磁盘，一旦出现故障，会产生难以估量的影响。
(3）自然因素。随着时间的推移，存放在磁盘上的数据会逐渐消失。
243